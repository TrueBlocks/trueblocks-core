chifra transactions  --file cmd_file --fmt csv
TEST[DATE|TIME] Transactions:  [0x0f1217b92276cd17608d4212879739e6a5ec388bd7a03bef9798655234afd2b9.78]
TEST[DATE|TIME] File:  cmd_file
TEST[DATE|TIME] Format:  txt
blockNumber	transactionIndex	date	timestamp	from	to	ether	gasPrice	gasUsed	gasCost	hash	isError	encoding
3657480	78	2017-05-06 00:43:39 UTC	1494031419	0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5	0x8c222fb428f9f44715cf85349f79a18761c8e53c	0.233602441535478432	20000000000	21000	420000000000000	0x1e4e4d62951733dea1cce59eca0ffaf89a7881f13c9bb8558d61f6a9e0928c4b	false	0x
TEST[DATE|TIME] Transactions:  [3657480.78]
TEST[DATE|TIME] Traces:  true
TEST[DATE|TIME] File:  cmd_file
TEST[DATE|TIME] Format:  csv
blockNumber,transactionIndex,date,timestamp,from,to,ether,gasPrice,gasUsed,gasCost,hash,isError,encoding,nTraces
3657480,78,2017-05-06 00:43:39 UTC,1494031419,0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5,0x8c222fb428f9f44715cf85349f79a18761c8e53c,0.233602441535478432,20000000000,21000,420000000000000,0x1e4e4d62951733dea1cce59eca0ffaf89a7881f13c9bb8558d61f6a9e0928c4b,false,0x,1
TEST[DATE|TIME] Transactions:  [0xda2f27fffb36c90c74fc53bd8b721074e87203c727640c95c4c802296e3bf8ad]
TEST[DATE|TIME] File:  cmd_file
TEST[DATE|TIME] Format:  csv
blockNumber,transactionIndex,date,timestamp,from,to,ether,gasPrice,gasUsed,gasCost,hash,isError,encoding
3657480,79,2017-05-06 00:43:39 UTC,1494031419,0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5,0x85ac33fe36a146ca3651693c16fbb45b3832b3f6,0.207260709928115808,20000000000,21000,420000000000000,0xda2f27fffb36c90c74fc53bd8b721074e87203c727640c95c4c802296e3bf8ad,false,0x
TEST[DATE|TIME] Flow:  mt
TEST[DATE|TIME] File:  cmd_file
TEST[DATE|TIME] Format:  csv
Error: The --flow option is only available with the --uniq option
Usage:
  chifra transactions [flags] <tx_id> [tx_id...]

Arguments:
  transactions - a space-separated list of one or more transaction identifiers (required)

Flags:
  -a, --articulate           articulate the retrieved data if ABIs can be found
  -t, --traces               include the transaction's traces in the results
  -u, --uniq                 display a list of uniq addresses found in the transaction
  -f, --flow string          for the uniq option only, export only from or to (including trace from or to)
                             One of [ from | to ]
  -l, --logs                 display only the logs found in the transaction(s)
  -m, --emitter strings      for the --logs option only, filter logs to show only those logs emitted by the given address(es)
  -B, --topic strings        for the --logs option only, filter logs to show only those with this topic(s)
  -A, --account_for string   reconcile the transaction as per the provided address
      --cache_traces         force the transaction's traces into the cache (hidden)
  -D, --decache              removes a transactions and any traces in the transaction from the cache
  -s, --source               find the source of the funds sent to the receiver (hidden)
  -H, --ether                specify value in ether
  -w, --raw                  report JSON data from the source with minimal processing
  -o, --cache                force the results of the query into the cache
  -x, --fmt string           export format, one of [none|json*|txt|csv]
  -v, --verbose              enable verbose (increase detail with --log_level)
  -h, --help                 display this help screen

Notes:
  - The transactions list may be one or more transaction hashes, blockNumber.transactionID pairs, or a blockHash.transactionID pairs.
  - This tool checks for valid input syntax, but does not check that the transaction requested actually exists.
  - If the queried node does not store historical state, the results for most older transactions are undefined.
  - The --traces option, when used with --account_for, will descend into traces to complete reconciliations.

