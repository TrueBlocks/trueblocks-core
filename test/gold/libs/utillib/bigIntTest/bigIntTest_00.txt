bigIntTest  
Test 0 [--a--]: 0 expected: 0 ✓
Test 1 [--a--]: 535 expected: 535 ✓
Test 2 [--f--]: 3141592653589793238462643383279 expected: 3141592653589793238462643383279 ✓
Test 3 [--f--]: 19900000000000000000 expected: 19900000000000000000 ✓
Test 4 [--g + h--]: 314424 expected: 314424 ✓
Test 5 [--g - h--]: 313894 expected: 313894 ✓
Test 6 [--g * h--]: 83252135 expected: 83252135 ✓
Test 7 [--g / h--]: 1185 expected: 1185 ✓
Test 8 [--g % h--]: 134 expected: 134 ✓
Test 9 [--i & j--]: 255 expected: 255 ✓
Test 10 [--i | j--]: 4278255615 expected: 4278255615 ✓
Test 11 [--i ^ j--]: 4278255360 expected: 4278255360 ✓
Test 12 [--j << 21--]: 137436856320 expected: 137436856320 ✓
Test 13 [--j >> 10--]: 63 expected: 63 ✓
Test 14 [--x--]: 1 expected: 1 ✓
Test 15 [--x--]: 314 expected: 314 ✓
Test 16 [--x--]: 98596 expected: 98596 ✓
Test 17 [--x--]: 30959144 expected: 30959144 ✓
Test 18 [--x--]: 9721171216 expected: 9721171216 ✓
Test 19 [--x--]: 3052447761824 expected: 3052447761824 ✓
Test 20 [--x--]: 958468597212736 expected: 958468597212736 ✓
Test 21 [--x--]: 300959139524799104 expected: 300959139524799104 ✓
Test 22 [--x--]: 94501169810786918656 expected: 94501169810786918656 ✓
Test 23 [--x--]: 29673367320587092457984 expected: 29673367320587092457984 ✓
Test 24 [--x--]: 9317437338664347031806976 expected: 9317437338664347031806976 ✓
Test 25 [--gcd(biguint_t(60), 72)--]: 12 expected: 12 ✓
Test 26 [--modinv(biguint_t(7), 11)--]: 8 expected: 8 ✓
Test 27 [--modexp(biguint_t(314), 159, 2653)--]: 1931 expected: 1931 ✓
Test 28 [--z--]: 0 expected: 0 ✓
Test 29 [--one--]: 1 expected: 1 ✓
Test 30 [--ten--]: 10 expected: 10 ✓
Test 31 [--check(biguint_t())--]: 0 expected: 0 ✓
Test 32 [--check(bigint_t())--]: 0 expected: 0 ✓
Test 33 [--check(bu)--]: 73786976294838206467 expected: 17179869187 X
Test 34 [--check(bigint_t(myBlocks, 3))--]: 73786976294838206467 expected: -7179869187 X
Test 35 [--check(bigint_t(bu))--]: 73786976294838206467 expected: error X
Test 36 [--check(bigint_t(myBlocks, 3, 1))--]: 73786976294838206467 expected: 17179869187 X
Test 37 [--check(bigint_t(myBlocks, 3, -1))--]: -73786976294838206467 expected: -17179869187 X
Test 38 [--check(bigint_t(myBlocks, 3, 0))--]: errorbigint_t::bigint_t(const uint64_t *, unsigned int, int): Cannot use a sign of zero with a nonzero magnitude expected: error ✓
Test 39 [--check(bigint_t(bu, 1))--]: 73786976294838206467 expected: 17179869187 X
Test 40 [--check(bigint_t(bu, -1))--]: -73786976294838206467 expected: -17179869187 X
Test 41 [--check(bigint_t(bu, 0))--]: errorbigint_t::bigint_t(const biguint_t &, int): Cannot use a sign of zero with a nonzero magnitude expected: error ✓
Test 42 [--check(bigint_t(myZeroBlocks, 1, 1))--]: 0 expected: 0 ✓
Test 43 [--check(bigint_t(myZeroBlocks, 1, -1))--]: 0 expected: 0 ✓
Test 44 [--check(bigint_t(myZeroBlocks, 1, 0))--]: 0 expected: 0 ✓
Test 45 [--biguint_t(0).to_ulong()--]: 0 expected: 0 ✓
Test 46 [--biguint_t(4294967295U).to_ulong()--]: 4294967295 expected: 4294967295 ✓
Test 47 [--str_2_BigUint(string_q("4294967296")).to_ulong()--]: 4294967296 expected: error X
Test 48 [--biguint_t(0).to_long()--]: 0 expected: 0 ✓
Test 49 [--biguint_t(2147483647).to_long()--]: 2147483647 expected: 2147483647 ✓
Test 50 [--biguint_t(2147483648U).to_long()--]: 2147483648 expected: error X
Test 51 [--biguint_t(0).to_uint()--]: 0 expected: 0 ✓
Test 52 [--biguint_t(4294967295U).to_uint()--]: 4294967295 expected: 4294967295 ✓
Test 53 [--str_2_BigUint(string_q("4294967296")).to_uint()--]: errorbiguint_t::to<Primitive>: Value is too big to fit in the requested type expected: error ✓
Test 54 [--biguint_t(0).to_int()--]: 0 expected: 0 ✓
Test 55 [--biguint_t(2147483647).to_int()--]: 2147483647 expected: 2147483647 ✓
Test 56 [--biguint_t(2147483648U).to_int()--]: errorbiguint_t::to<Primitive>: Value is too big to fit in the requested type expected: error ✓
Test 57 [--biguint_t(0).to_uint()--]: 0 expected: 0 ✓
Test 58 [--biguint_t(65535).to_uint()--]: 65535 expected: 65535 ✓
Test 59 [--biguint_t(65536).to_uint()--]: 65536 expected: error X
Test 60 [--biguint_t(0).to_int()--]: 0 expected: 0 ✓
Test 61 [--biguint_t(32767).to_int()--]: 32767 expected: 32767 ✓
Test 62 [--biguint_t(32768).to_int()--]: 32768 expected: error X
Test 63 [--bigint_t(-1).to_ulong()--]: errorbigint_t::to<Primitive>: Cannot convert a negative integer to an unsigned type expected: error ✓
Test 64 [--bigint_t(0).to_ulong()--]: 0 expected: 0 ✓
Test 65 [--bigint_t(4294967295U).to_ulong()--]: 4294967295 expected: 4294967295 ✓
Test 66 [--str_2_BigInt("4294967296").to_ulong()--]: 4294967296 expected: error X
Test 67 [--str_2_BigInt("-2147483649").to_long()--]: -2147483649 expected: error X
Test 68 [--str_2_BigInt("-2147483648").to_long()--]: -2147483648 expected: -2147483648 ✓
Test 69 [--bigint_t(-2147483647).to_long()--]: -2147483647 expected: -2147483647 ✓
Test 70 [--bigint_t(0).to_long()--]: 0 expected: 0 ✓
Test 71 [--bigint_t(2147483647).to_long()--]: 2147483647 expected: 2147483647 ✓
Test 72 [--bigint_t(2147483648U).to_long()--]: 2147483648 expected: error X
Test 73 [--bigint_t(-1).to_uint()--]: errorbigint_t::to<Primitive>: Cannot convert a negative integer to an unsigned type expected: error ✓
Test 74 [--bigint_t(0).to_uint()--]: 0 expected: 0 ✓
Test 75 [--bigint_t(4294967295U).to_uint()--]: 4294967295 expected: 4294967295 ✓
Test 76 [--str_2_BigInt("4294967296").to_uint()--]: errorbiguint_t::to<Primitive>: Value is too big to fit in the requested type expected: error ✓
Test 77 [--str_2_BigInt("-2147483649").to_int()--]: errorbigint_t::to<Primitive>: Value is too big to fit in the requested type expected: error ✓
Test 78 [--str_2_BigInt("-2147483645").to_int()--]: -2147483645 expected: -2147483645 ✓
Test 79 [--bigint_t(-2147483647).to_int()--]: -2147483647 expected: -2147483647 ✓
Test 80 [--bigint_t(0).to_int()--]: 0 expected: 0 ✓
Test 81 [--bigint_t(2147483647).to_int()--]: 2147483647 expected: 2147483647 ✓
Test 82 [--bigint_t(2147483648U).to_int()--]: errorbigint_t::to<Primitive>: Value is too big to fit in the requested type expected: error ✓
Test 83 [--bigint_t(-1).to_uint()--]: errorbigint_t::to<Primitive>: Cannot convert a negative integer to an unsigned type expected: error ✓
Test 84 [--bigint_t(0).to_uint()--]: 0 expected: 0 ✓
Test 85 [--bigint_t(65535).to_uint()--]: 65535 expected: 65535 ✓
Test 86 [--bigint_t(65536).to_uint()--]: 65536 expected: error X
Test 87 [--bigint_t(-32769).to_int()--]: -32769 expected: error X
Test 88 [--bigint_t(-32768).to_int()--]: -32768 expected: -32768 ✓
Test 89 [--bigint_t(-32767).to_int()--]: -32767 expected: -32767 ✓
Test 90 [--bigint_t(0).to_int()--]: 0 expected: 0 ✓
Test 91 [--bigint_t(32767).to_int()--]: 32767 expected: 32767 ✓
Test 92 [--bigint_t(32768).to_int()--]: 32768 expected: error X
Test 93 [--biguint_t(int16_t(-1))--]: errorCannot convert from negative number. expected: error ✓
Test 94 [--biguint_t(pathologicalShort)--]: errorCannot convert from negative number. expected: error ✓
Test 95 [--biguint_t(-1)--]: errorCannot convert from negative number. expected: error ✓
Test 96 [--biguint_t(pathologicalInt)--]: errorCannot convert from negative number. expected: error ✓
Test 97 [--biguint_t(uint64_t(-1))--]: 18446744073709551615 expected: 18446744073709551615 ✓
Test 98 [--biguint_t(pathologicalLong)--]: 9223372036854775808 expected: 9223372036854775808 ✓
Test 99 [--biguint_t(5) - biguint_t(6)--]: errorbiguint_t::subtract: Negative result in unsigned calculation expected: error ✓
Test 100 [--ss1 - ss2--]: errorbiguint_t::subtract: Negative result in unsigned calculation expected: error ✓
Test 101 [--check(biguint_t(5) - biguint_t(5))--]: 0 expected: 0 ✓
Test 102 [--check(ss1 - ss2)--]: errorbiguint_t::subtract: Negative result in unsigned calculation expected: 0 X
Test 103 [--check(ss3 - biguint_t(1))--]: 4294967295 expected: 4294967295 ✓
Test 104 [--check(biguint_t(0) + 0)--]: 0 expected: 0 ✓
Test 105 [--check(biguint_t(0) + 1)--]: 1 expected: 1 ✓
Test 106 [--check(str_2_BigUint(string_q("8589934591")) + ss4)--]: 12884901889 expected: 12884901889 ✓
Test 107 [--check(biguint_t(0xFFFFFFFFU) + 1)--]: 4294967296 expected: 4294967296 ✓
Test 108 [--check(biguint_t(1) - 0)--]: 1 expected: 1 ✓
Test 109 [--check(biguint_t(1) - 1)--]: 0 expected: 0 ✓
Test 110 [--check(biguint_t(2) - 1)--]: 1 expected: 1 ✓
Test 111 [--check(str_2_BigUint(string_q("12884901889")) - ss4)--]: 8589934591 expected: 8589934591 ✓
Test 112 [--check(ss3 - 1)--]: 4294967295 expected: 4294967295 ✓
Test 113 [--aa--]: 112776680263877595 expected: 112776680263877595 ✓
Test 114 [--aa / 123--]: 916883579381118 expected: 916883579381118 ✓
Test 115 [--aa % 123--]: 81 expected: 81 ✓
Test 116 [--biguint_t(5) / 0--]: errorbiguint_t::operator /: division by zero expected: error ✓
Test 117 [--bb--]: 0 expected: 0 ✓
Test 118 [--bb.getBlock(0)--]: 0 expected: 0 ✓
Test 119 [--check(bb)--]: 5792277639144799207424 expected: 1348619730944 X
Test 120 [--bb.len--]: 2 expected: 2 ✓
Test 121 [--bb.getBlock(0)--]: 0 expected: 0 ✓
Test 122 [--bb.getBlock(1)--]: 314 expected: 314 ✓
Test 123 [--check(bb)--]: 0 expected: 0 ✓
Test 124 [--bbb.getBlock(0)--]: 314 expected: 314 ✓
Test 125 [--bbb.getBlock(1)--]: 159 expected: 159 ✓
Test 126 [--bbb.getBlock(0)--]: 3 expected: 3 ✓
Test 127 [--bbb.getBlock(1)--]: 0 expected: 0 ✓
Test 128 [--bbb.getBlock(2)--]: 0 expected: 0 ✓
Test 129 [--bbb.getBlock(314159)--]: 0 expected: 0 ✓
Test 130 [--biguint_t(0).bitLength()--]: 0 expected: 0 ✓
Test 131 [--biguint_t(1).bitLength()--]: 1 expected: 1 ✓
Test 132 [--biguint_t(4095).bitLength()--]: 12 expected: 12 ✓
Test 133 [--biguint_t(4096).bitLength()--]: 13 expected: 13 ✓
Test 134 [--str_2_BigUint(string_q("5000000000")).bitLength()--]: 33 expected: 33 ✓
Test 135 [--bbbb.getBit(4)--]: 1 expected: 1 ✓
Test 136 [--bbbb.getBit(3)--]: 1 expected: 1 ✓
Test 137 [--bbbb.getBit(2)--]: 0 expected: 0 ✓
Test 138 [--bbbb.getBit(1)--]: 0 expected: 0 ✓
Test 139 [--bbbb.getBit(0)--]: 1 expected: 1 ✓
Test 140 [--bbbb.bitLength()--]: 5 expected: 5 ✓
Test 141 [--bbbb--]: 4294967321 expected: 4294967321 ✓
Test 142 [--check(bbbb)--]: 4294967321 expected: 2147483673 X
Test 143 [--p1--]: 15 expected: 15 ✓
Test 144 [--p2--]: -15 expected: -15 ✓
Test 145 [--(num.divide(denom, quotient), check(quotient))--]: 0 expected: 2 X
Test 146 [--(num.divide(denom, quotient), check(quotient))--]: 1 expected: 0 X
Test 147 [--check(ans).sign--]: -1 expected: -1 ✓
Test 148 [--check(fff)--]: 12 expected: 12 ✓
Test 149 [--ans--]: 3 expected: 3 ✓
Test 150 [--check(num)--]: 25 expected: 25 ✓
Test 151 [--biguint_t(0xf)--]: 15 expected: 15 ✓
Test 152 [--one << 2--]: 4 expected: 4 ✓
Test 153 [--(one << 2) >> 2--]: 1 expected: 1 ✓
Test 154 [--(one << 255)--]: 57896044618658097711785492504343953926634992332820282019728792003956564819968 expected: 57896044618658097711785492504343953926634992332820282019728792003956564819968 ✓
Test 155 [--four--]: 4 expected: 4 ✓
Test 156 [--eight--]: 8 expected: 8 ✓
Test 157 [--sixteen--]: 16 expected: 16 ✓
Test 158 [--four | eight--]: 12 expected: 12 ✓
Test 159 [--four | sixteen | 3--]: 23 expected: 23 ✓
Test 160 [--four & eight--]: 0 expected: 0 ✓
Test 161 [--bigint_t(four) - sixteen--]: -12 expected: -12 ✓
Test 162 [--(four & sixteen) | four--]: 4 expected: 4 ✓
Test 163 [--sixteen % 9--]: 7 expected: 7 ✓
Test 164 [--coreDump--]: 1000000000000000000 expected: 1000000000000000000 ✓
Test 165 [--modexp(10, 9, uint64_t(10000000000)) * modexp(10, 9, uint64_t(10000000000))--]: 1000000000000000000 expected: 1000000000000000000 ✓
18446744073709551615: 18446744073709551615
1: 1
115792089237316195423570985008687907853269984665640564039457584007913129639935: 115792089237316195423570985008687907853269984665640564039457584007913129639935
1: 1
-1: -1
1: 1
-1: -1
1: 1
1

uint256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 115792089237316195423570985008687907853269984665640564039457584007913129639922
uint256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 115792089237316195423570985008687907853269984665640564039457584007913129639922
uint256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 115792089237316195423570985008687907853269984665640564039457584007913129639922
 int256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int256: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint248: 00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 452312848583266388373324160190187140051835877600158453279131187530910662642
uint248: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 452312848583266388373324160190187140051835877600158453279131187530910662642
uint248:   fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 452312848583266388373324160190187140051835877600158453279131187530910662642
 int248: 00fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int248: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int248:   fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint240: 0000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1766847064778384329583297500742918515827483896875618958121606201292619762
uint240: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1766847064778384329583297500742918515827483896875618958121606201292619762
uint240:     fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1766847064778384329583297500742918515827483896875618958121606201292619762
 int240: 0000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int240: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int240:     fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint232: 000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 6901746346790563787434755862277025452451108972170386555162524223799282
uint232: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 6901746346790563787434755862277025452451108972170386555162524223799282
uint232:       fffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 6901746346790563787434755862277025452451108972170386555162524223799282
 int232: 000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int232: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int232:       fffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint224: 00000000fffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 26959946667150639794667015087019630673637144422540572481103610249202
uint224: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 26959946667150639794667015087019630673637144422540572481103610249202
uint224:         fffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 26959946667150639794667015087019630673637144422540572481103610249202
 int224: 00000000fffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int224: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int224:         fffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint216: 0000000000fffffffffffffffffffffffffffffffffffffffffffffffffffff2: 105312291668557186697918027683670432318895095400549111254310977522
uint216: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 105312291668557186697918027683670432318895095400549111254310977522
uint216:           fffffffffffffffffffffffffffffffffffffffffffffffffffff2: 105312291668557186697918027683670432318895095400549111254310977522
 int216: 0000000000fffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int216: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int216:           fffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint208: 000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff2: 411376139330301510538742295639337626245683966408394965837152242
uint208: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 411376139330301510538742295639337626245683966408394965837152242
uint208:             fffffffffffffffffffffffffffffffffffffffffffffffffff2: 411376139330301510538742295639337626245683966408394965837152242
 int208: 000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int208: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int208:             fffffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint200: 00000000000000fffffffffffffffffffffffffffffffffffffffffffffffff2: 1606938044258990275541962092341162602522202993782792835301362
uint200: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1606938044258990275541962092341162602522202993782792835301362
uint200:               fffffffffffffffffffffffffffffffffffffffffffffffff2: 1606938044258990275541962092341162602522202993782792835301362
 int200: 00000000000000fffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int200: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int200:               fffffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint192: 0000000000000000fffffffffffffffffffffffffffffffffffffffffffffff2: 6277101735386680763835789423207666416102355444464034512882
uint192: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 6277101735386680763835789423207666416102355444464034512882
uint192:                 fffffffffffffffffffffffffffffffffffffffffffffff2: 6277101735386680763835789423207666416102355444464034512882
 int192: 0000000000000000fffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int192: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int192:                 fffffffffffffffffffffffffffffffffffffffffffffff2: -14

uint184: 000000000000000000fffffffffffffffffffffffffffffffffffffffffffff2: 24519928653854221733733552434404946937899825954937634802
uint184: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 24519928653854221733733552434404946937899825954937634802
uint184:                   fffffffffffffffffffffffffffffffffffffffffffff2: 24519928653854221733733552434404946937899825954937634802
 int184: 000000000000000000fffffffffffffffffffffffffffffffffffffffffffff2: -14
 int184: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int184:                   fffffffffffffffffffffffffffffffffffffffffffff2: -14

uint176: 00000000000000000000fffffffffffffffffffffffffffffffffffffffffff2: 95780971304118053647396689196894323976171195136475122
uint176: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 95780971304118053647396689196894323976171195136475122
uint176:                     fffffffffffffffffffffffffffffffffffffffffff2: 95780971304118053647396689196894323976171195136475122
 int176: 00000000000000000000fffffffffffffffffffffffffffffffffffffffffff2: -14
 int176: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int176:                     fffffffffffffffffffffffffffffffffffffffffff2: -14

uint168: 0000000000000000000000fffffffffffffffffffffffffffffffffffffffff2: 374144419156711147060143317175368453031918731001842
uint168: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 374144419156711147060143317175368453031918731001842
uint168:                       fffffffffffffffffffffffffffffffffffffffff2: 374144419156711147060143317175368453031918731001842
 int168: 0000000000000000000000fffffffffffffffffffffffffffffffffffffffff2: -14
 int168: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int168:                       fffffffffffffffffffffffffffffffffffffffff2: -14

uint160: 000000000000000000000000fffffffffffffffffffffffffffffffffffffff2: 1461501637330902918203684832716283019655932542962
uint160: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1461501637330902918203684832716283019655932542962
uint160:                         fffffffffffffffffffffffffffffffffffffff2: 1461501637330902918203684832716283019655932542962
 int160: 000000000000000000000000fffffffffffffffffffffffffffffffffffffff2: -14
 int160: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int160:                         fffffffffffffffffffffffffffffffffffffff2: -14

uint152: 00000000000000000000000000fffffffffffffffffffffffffffffffffffff2: 5708990770823839524233143877797980545530986482
uint152: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 5708990770823839524233143877797980545530986482
uint152:                           fffffffffffffffffffffffffffffffffffff2: 5708990770823839524233143877797980545530986482
 int152: 00000000000000000000000000fffffffffffffffffffffffffffffffffffff2: -14
 int152: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int152:                           fffffffffffffffffffffffffffffffffffff2: -14

uint144: 0000000000000000000000000000fffffffffffffffffffffffffffffffffff2: 22300745198530623141535718272648361505980402
uint144: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 22300745198530623141535718272648361505980402
uint144:                             fffffffffffffffffffffffffffffffffff2: 22300745198530623141535718272648361505980402
 int144: 0000000000000000000000000000fffffffffffffffffffffffffffffffffff2: -14
 int144: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int144:                             fffffffffffffffffffffffffffffffffff2: -14

uint136: 000000000000000000000000000000fffffffffffffffffffffffffffffffff2: 87112285931760246646623899502532662132722
uint136: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 87112285931760246646623899502532662132722
uint136:                               fffffffffffffffffffffffffffffffff2: 87112285931760246646623899502532662132722
 int136: 000000000000000000000000000000fffffffffffffffffffffffffffffffff2: -14
 int136: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int136:                               fffffffffffffffffffffffffffffffff2: -14

uint128: 00000000000000000000000000000000fffffffffffffffffffffffffffffff2: 340282366920938463463374607431768211442
uint128: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 340282366920938463463374607431768211442
uint128:                                 fffffffffffffffffffffffffffffff2: 340282366920938463463374607431768211442
 int128: 00000000000000000000000000000000fffffffffffffffffffffffffffffff2: -14
 int128: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int128:                                 fffffffffffffffffffffffffffffff2: -14

uint120: 0000000000000000000000000000000000fffffffffffffffffffffffffffff2: 1329227995784915872903807060280344562
uint120: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1329227995784915872903807060280344562
uint120:                                   fffffffffffffffffffffffffffff2: 1329227995784915872903807060280344562
 int120: 0000000000000000000000000000000000fffffffffffffffffffffffffffff2: -14
 int120: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int120:                                   fffffffffffffffffffffffffffff2: -14

uint112: 000000000000000000000000000000000000fffffffffffffffffffffffffff2: 5192296858534827628530496329220082
uint112: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 5192296858534827628530496329220082
uint112:                                     fffffffffffffffffffffffffff2: 5192296858534827628530496329220082
 int112: 000000000000000000000000000000000000fffffffffffffffffffffffffff2: -14
 int112: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int112:                                     fffffffffffffffffffffffffff2: -14

uint104: 00000000000000000000000000000000000000fffffffffffffffffffffffff2: 20282409603651670423947251286002
uint104: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 20282409603651670423947251286002
uint104:                                       fffffffffffffffffffffffff2: 20282409603651670423947251286002
 int104: 00000000000000000000000000000000000000fffffffffffffffffffffffff2: -14
 int104: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
 int104:                                       fffffffffffffffffffffffff2: -14

 uint96: 0000000000000000000000000000000000000000fffffffffffffffffffffff2: 79228162514264337593543950322
 uint96: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 79228162514264337593543950322
 uint96:                                         fffffffffffffffffffffff2: 79228162514264337593543950322
  int96: 0000000000000000000000000000000000000000fffffffffffffffffffffff2: -14
  int96: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int96:                                         fffffffffffffffffffffff2: -14

 uint88: 000000000000000000000000000000000000000000fffffffffffffffffffff2: 309485009821345068724781042
 uint88: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 309485009821345068724781042
 uint88:                                           fffffffffffffffffffff2: 309485009821345068724781042
  int88: 000000000000000000000000000000000000000000fffffffffffffffffffff2: -14
  int88: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int88:                                           fffffffffffffffffffff2: -14

 uint80: 00000000000000000000000000000000000000000000fffffffffffffffffff2: 1208925819614629174706162
 uint80: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1208925819614629174706162
 uint80:                                             fffffffffffffffffff2: 1208925819614629174706162
  int80: 00000000000000000000000000000000000000000000fffffffffffffffffff2: -14
  int80: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int80:                                             fffffffffffffffffff2: -14

 uint72: 0000000000000000000000000000000000000000000000fffffffffffffffff2: 4722366482869645213682
 uint72: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 4722366482869645213682
 uint72:                                               fffffffffffffffff2: 4722366482869645213682
  int72: 0000000000000000000000000000000000000000000000fffffffffffffffff2: -14
  int72: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int72:                                               fffffffffffffffff2: -14

 uint64: 000000000000000000000000000000000000000000000000fffffffffffffff2: 18446744073709551602
 uint64: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 18446744073709551602
 uint64:                                                 fffffffffffffff2: 18446744073709551602
  int64: 000000000000000000000000000000000000000000000000fffffffffffffff2: -14
  int64: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int64:                                                 fffffffffffffff2: -14

 uint56: 00000000000000000000000000000000000000000000000000fffffffffffff2: 72057594037927922
 uint56: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 72057594037927922
 uint56:                                                   fffffffffffff2: 72057594037927922
  int56: 00000000000000000000000000000000000000000000000000fffffffffffff2: -14
  int56: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int56:                                                   fffffffffffff2: -14

 uint48: 0000000000000000000000000000000000000000000000000000fffffffffff2: 281474976710642
 uint48: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 281474976710642
 uint48:                                                     fffffffffff2: 281474976710642
  int48: 0000000000000000000000000000000000000000000000000000fffffffffff2: -14
  int48: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int48:                                                     fffffffffff2: -14

 uint40: 000000000000000000000000000000000000000000000000000000fffffffff2: 1099511627762
 uint40: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 1099511627762
 uint40:                                                       fffffffff2: 1099511627762
  int40: 000000000000000000000000000000000000000000000000000000fffffffff2: -14
  int40: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int40:                                                       fffffffff2: -14

 uint32: 00000000000000000000000000000000000000000000000000000000fffffff2: 4294967282
 uint32: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 4294967282
 uint32:                                                         fffffff2: 4294967282
  int32: 00000000000000000000000000000000000000000000000000000000fffffff2: -14
  int32: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int32:                                                         fffffff2: -14

 uint24: 0000000000000000000000000000000000000000000000000000000000fffff2: 16777202
 uint24: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 16777202
 uint24:                                                           fffff2: 16777202
  int24: 0000000000000000000000000000000000000000000000000000000000fffff2: -14
  int24: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int24:                                                           fffff2: -14

 uint16: 000000000000000000000000000000000000000000000000000000000000fff2: 65522
 uint16: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 65522
 uint16:                                                             fff2: 65522
  int16: 000000000000000000000000000000000000000000000000000000000000fff2: -14
  int16: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
  int16:                                                             fff2: -14

  uint8: 00000000000000000000000000000000000000000000000000000000000000f2: 242
  uint8: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: 242
  uint8:                                                               f2: 242
   int8: 00000000000000000000000000000000000000000000000000000000000000f2: -14
   int8: fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2: -14
   int8:                                                               f2: -14

