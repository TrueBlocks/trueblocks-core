abiTest  eth_test -s 3
ethereum test box test...
0. --------------------------------------------------------------------------------
	000.000 test_0                           ==> 
line: ;encode_raw|encoding negative int32|function baz(int32)|-2|0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
testType: ;encode_raw
testName: encoding negative int32
testSig: function baz(int32) --> baz(int32)
expected: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe ?
result:   0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe ? 1
testName: encoding negative int32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.001 test_1                           ==> 
line: ;encode_raw|encoding negative int256|function baz(int256)|bn(-19999999999999999999999999999999999999999999999999999999999999)|0xfffffffffffff38dd0f10627f5529bdb2c52d4846810af0ac000000000000001
testType: ;encode_raw
testName: encoding negative int256
testSig: function baz(int256) --> baz(int256)
expected: 0xfffffffffffff38dd0f10627f5529bdb2c52d4846810af0ac000000000000001 ?
result:   0xfffffffffffff38dd0f10627f5529bdb2c52d4846810af0ac000000000000001 ? 1
testName: encoding negative int256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.002 test_2                           ==> 
line: ;encode_raw|encoding string >32bytes|function baz(string)|hello world hello world hello world hello world  hello world hello world hello world hello world  hello world hello world hello world hello world hello world hello world hello world hello world|0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c22068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64000000000000000000000000000000000000000000000000000000000000
testType: ;encode_raw
testName: encoding string >32bytes
testSig: function baz(string) --> baz(string)
expected: 0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c22068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64000000000000000000000000000000000000000000000000000000000000 ?
result:   0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c22068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64202068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c642068656c6c6f20776f726c64000000000000000000000000000000000000000000000000000000000000 ? 1
testName: encoding string >32bytes
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.003 test_3                           ==> 
line: ;encode_raw|encoding uint32 response|function baz(uint32)|42|0x000000000000000000000000000000000000000000000000000000000000002a
testType: ;encode_raw
testName: encoding uint32 response
testSig: function baz(uint32) --> baz(uint32)
expected: 0x000000000000000000000000000000000000000000000000000000000000002a ?
result:   0x000000000000000000000000000000000000000000000000000000000000002a ? 1
testName: encoding uint32 response
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.004 test_4                           ==> 
line: ;encode_raw|encoding string response (unsupported)|function baz(string)|a response string (unsupported)|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001f6120726573706f6e736520737472696e672028756e737570706f727465642900
testType: ;encode_raw
testName: encoding string response (unsupported)
testSig: function baz(string) --> baz(string)
expected: 0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001f6120726573706f6e736520737472696e672028756e737570706f727465642900 ?
result:   0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001f6120726573706f6e736520737472696e672028756e737570706f727465642900 ? 1
testName: encoding string response (unsupported)
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.005 test_5                           ==> 
line: ;encode_raw|encoding 1|function baz(uint256)|1|0x0000000000000000000000000000000000000000000000000000000000000001
testType: ;encode_raw
testName: encoding 1
testSig: function baz(uint256) --> baz(uint256)
expected: 0x0000000000000000000000000000000000000000000000000000000000000001 ?
result:   0x0000000000000000000000000000000000000000000000000000000000000001 ? 1
testName: encoding 1
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.006 test_6                           ==> 
line: ;encode_raw|encoding 2|function baz(uint)|1|0x0000000000000000000000000000000000000000000000000000000000000001
testType: ;encode_raw
testName: encoding 2
testSig: function baz(uint) --> baz(uint256)
expected: 0x0000000000000000000000000000000000000000000000000000000000000001 ?
result:   0x0000000000000000000000000000000000000000000000000000000000000001 ? 1
testName: encoding 2
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.007 test_7                           ==> 
line: ;encode_raw|encoding 3|function baz(int256)|-1|0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
testType: ;encode_raw
testName: encoding 3
testSig: function baz(int256) --> baz(int256)
expected: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ?
result:   0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ? 1
testName: encoding 3
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.008 test_8                           ==> 
line: ;encode_raw|encoding 3|function baz(string,uint256[2])|foo,[5, 6]|0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000003666f6f0000000000000000000000000000000000000000000000000000000000
testType: ;encode_raw
testName: encoding 3
testSig: function baz(string,uint256[2]) --> baz(string,uint256[2])
expected: 0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000003666f6f0000000000000000000000000000000000000000000000000000000000 ?
result:   0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000003666f6f0000000000000000000000000000000000000000000000000000000000 ? 1
testName: encoding 3
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.009 test_9                           ==> 
line: ;encode_raw|decoding address with leading 0|function baz(address)|0x0000000000000000000000000005b7d915458ef540ade6068dfe2f44e8fa733c|0x0005b7d915458ef540ade6068dfe2f44e8fa733c
testType: ;encode_raw
testName: decoding address with leading 0
testSig: function baz(address) --> baz(address)
expected: 0x0005b7d915458ef540ade6068dfe2f44e8fa733c ?
result:   0x0005b7d915458ef540ade6068dfe2f44e8fa733c ? 1
testName: decoding address with leading 0
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.010 test_10                          ==> 
line: ;raw_encode|encoding ufixed128x128|function baz(ufixed128x128)|1|0x0000000000000000000000000000000100000000000000000000000000000000
testType: ;raw_encode
testName: encoding ufixed128x128
testSig: function baz(ufixed128x128) --> baz(ufixed128x128)
expected: 0x0000000000000000000000000000000100000000000000000000000000000000 ?
result:   0x0000000000000000000000000000000100000000000000000000000000000000 ? 1
testName: encoding ufixed128x128
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.011 test_11                          ==> 
line: ;raw_encode|encoding fixed128x128|function baz(fixed128x128|-1|0xffffffffffffffffffffffffffffffff00000000000000000000000000000000
testType: ;raw_encode
testName: encoding fixed128x128
testSig: function baz(fixed128x128 --> baz(fixed128x128)
expected: 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 ?
result:   0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 ? 1
testName: encoding fixed128x128
passed 'func.doTest(line)' is true
...passed

Done...
