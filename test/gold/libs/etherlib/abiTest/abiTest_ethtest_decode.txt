abiTest  eth_test -s 4
ethereum test box test...
0. --------------------------------------------------------------------------------
	000.000 test_0                           ==> 
line: decode|decoding (uint[][3], uint) three sets of two|function baz(uint[][3],uint)|0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decoding (uint[][3], uint) three sets of two
testSig: function baz(uint[][3],uint) --> baz(uint256[][3],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint256[][3] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000080 <=o <-r
  1 (0x020) 0000000000000000...000000000000000000000000000000e0
  2 (0x040) 0000000000000000...00000000000000000000000000000140
  3 (0x060) 0000000000000000...0000000000000000000000000000000a
  4 (0x080) 0000000000000000...00000000000000000000000000000002
  5 (0x0a0) 0000000000000000...00000000000000000000000000000001
  6 (0x0c0) 0000000000000000...00000000000000000000000000000002
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000002
 11 (0x160) 0000000000000000...00000000000000000000000000000005
 12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: uint256[] = <>
   1: uint256[] = <>
   2: uint256[] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000080 <=o <-r
   1 (0x020) 0000000000000000...000000000000000000000000000000e0
   2 (0x040) 0000000000000000...00000000000000000000000000000140
   3 (0x060) 0000000000000000...0000000000000000000000000000000a
   4 (0x080) 0000000000000000...00000000000000000000000000000002
   5 (0x0a0) 0000000000000000...00000000000000000000000000000001
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000002
  11 (0x160) 0000000000000000...00000000000000000000000000000005
  12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
  level: 3
  readOffset: 5
  objectStart: 4
  params.size: 1
    0: uint256[2] = <>
    internalType: uint256[]
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000080
    1 (0x020) 0000000000000000...000000000000000000000000000000e0
    2 (0x040) 0000000000000000...00000000000000000000000000000140
    3 (0x060) 0000000000000000...0000000000000000000000000000000a
    4 (0x080) 0000000000000000...00000000000000000000000000000002 <=o
    5 (0x0a0) 0000000000000000...00000000000000000000000000000001 <-r
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000002
   11 (0x160) 0000000000000000...00000000000000000000000000000005
   12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   level: 4
   readOffset: 5
   objectStart: 4
   params.size: 2
     0: uint256 = <>
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002 <=o
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001 <-r
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000002
    11 (0x160) 0000000000000000...00000000000000000000000000000005
    12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 2
     0: uint256 = 1
     1: uint256 = <>
   level: 4
   readOffset: 6
   objectStart: 4
   params.size: 2
     0: uint256 = 1
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002 <=o
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002 <-r
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000002
    11 (0x160) 0000000000000000...00000000000000000000000000000005
    12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 2
     0: uint256 = 1
     1: uint256 = 2
  params.size: 1
    0: uint256[2] = [1, 2]
    internalType: uint256[]
 params.size: 3
   0: uint256[] = [1, 2]
   1: uint256[] = <>
   2: uint256[] = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 3
   0: uint256[] = [1, 2]
   1: uint256[] = <>
   2: uint256[] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000080 <=o
   1 (0x020) 0000000000000000...000000000000000000000000000000e0 <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000140
   3 (0x060) 0000000000000000...0000000000000000000000000000000a
   4 (0x080) 0000000000000000...00000000000000000000000000000002
   5 (0x0a0) 0000000000000000...00000000000000000000000000000001
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000002
  11 (0x160) 0000000000000000...00000000000000000000000000000005
  12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
  level: 3
  readOffset: 8
  objectStart: 7
  params.size: 1
    0: uint256[2] = <>
    internalType: uint256[]
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000080
    1 (0x020) 0000000000000000...000000000000000000000000000000e0
    2 (0x040) 0000000000000000...00000000000000000000000000000140
    3 (0x060) 0000000000000000...0000000000000000000000000000000a
    4 (0x080) 0000000000000000...00000000000000000000000000000002
    5 (0x0a0) 0000000000000000...00000000000000000000000000000001
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002 <=o
    8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000002
   11 (0x160) 0000000000000000...00000000000000000000000000000005
   12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   level: 4
   readOffset: 8
   objectStart: 7
   params.size: 2
     0: uint256 = <>
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002 <=o
     8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000002
    11 (0x160) 0000000000000000...00000000000000000000000000000005
    12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 2
     0: uint256 = 3
     1: uint256 = <>
   level: 4
   readOffset: 9
   objectStart: 7
   params.size: 2
     0: uint256 = 3
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002 <=o
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004 <-r
    10 (0x140) 0000000000000000...00000000000000000000000000000002
    11 (0x160) 0000000000000000...00000000000000000000000000000005
    12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 2
     0: uint256 = 3
     1: uint256 = 4
  params.size: 1
    0: uint256[2] = [3, 4]
    internalType: uint256[]
 params.size: 3
   0: uint256[] = [1, 2]
   1: uint256[] = [3, 4]
   2: uint256[] = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: uint256[] = [1, 2]
   1: uint256[] = [3, 4]
   2: uint256[] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000080 <=o
   1 (0x020) 0000000000000000...000000000000000000000000000000e0
   2 (0x040) 0000000000000000...00000000000000000000000000000140 <-r
   3 (0x060) 0000000000000000...0000000000000000000000000000000a
   4 (0x080) 0000000000000000...00000000000000000000000000000002
   5 (0x0a0) 0000000000000000...00000000000000000000000000000001
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000002
  11 (0x160) 0000000000000000...00000000000000000000000000000005
  12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
  level: 3
  readOffset: 11
  objectStart: 10
  params.size: 1
    0: uint256[2] = <>
    internalType: uint256[]
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000080
    1 (0x020) 0000000000000000...000000000000000000000000000000e0
    2 (0x040) 0000000000000000...00000000000000000000000000000140
    3 (0x060) 0000000000000000...0000000000000000000000000000000a
    4 (0x080) 0000000000000000...00000000000000000000000000000002
    5 (0x0a0) 0000000000000000...00000000000000000000000000000001
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000002 <=o
   11 (0x160) 0000000000000000...00000000000000000000000000000005 <-r
   12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   level: 4
   readOffset: 11
   objectStart: 10
   params.size: 2
     0: uint256 = <>
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000002 <=o
    11 (0x160) 0000000000000000...00000000000000000000000000000005 <-r
    12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 2
     0: uint256 = 5
     1: uint256 = <>
   level: 4
   readOffset: 12
   objectStart: 10
   params.size: 2
     0: uint256 = 5
     1: uint256 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000080
     1 (0x020) 0000000000000000...000000000000000000000000000000e0
     2 (0x040) 0000000000000000...00000000000000000000000000000140
     3 (0x060) 0000000000000000...0000000000000000000000000000000a
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000001
     6 (0x0c0) 0000000000000000...00000000000000000000000000000002
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000002 <=o
    11 (0x160) 0000000000000000...00000000000000000000000000000005
    12 (0x180) 0000000000000000...00000000000000000000000000000006 <-r

==================================================
   params.size: 2
     0: uint256 = 5
     1: uint256 = 6
  params.size: 1
    0: uint256[2] = [5, 6]
    internalType: uint256[]
 params.size: 3
   0: uint256[] = [1, 2]
   1: uint256[] = [3, 4]
   2: uint256[] = [5, 6]
params.size: 2
  0: uint256[][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 2
  0: uint256[][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000080 <=o
  1 (0x020) 0000000000000000...000000000000000000000000000000e0
  2 (0x040) 0000000000000000...00000000000000000000000000000140
  3 (0x060) 0000000000000000...0000000000000000000000000000000a <-r
  4 (0x080) 0000000000000000...00000000000000000000000000000002
  5 (0x0a0) 0000000000000000...00000000000000000000000000000001
  6 (0x0c0) 0000000000000000...00000000000000000000000000000002
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000002
 11 (0x160) 0000000000000000...00000000000000000000000000000005
 12 (0x180) 0000000000000000...00000000000000000000000000000006

==================================================
params.size: 2
  0: uint256[][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint256[][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
==================================================

expected: [[1, 2], [3, 4], [5, 6]], 10 ?
result:   [[1, 2], [3, 4], [5, 6]], 10 ? 1
testName: decoding (uint[][3], uint) three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.001 test_1                           ==> 
line: decode|decoding (uint[3][], uint) two sets of three|function baz(uint[3][], uint)|0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006|[[1, 2, 3], [4, 5, 6]], 10
testType: decode
testName: decoding (uint[3][], uint) two sets of three
testSig: function baz(uint[3][], uint) --> baz(uint256[3][],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint256[3][] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 9
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o <-r
  1 (0x020) 0000000000000000...0000000000000000000000000000000a
  2 (0x040) 0000000000000000...00000000000000000000000000000002
  3 (0x060) 0000000000000000...00000000000000000000000000000001
  4 (0x080) 0000000000000000...00000000000000000000000000000002
  5 (0x0a0) 0000000000000000...00000000000000000000000000000003
  6 (0x0c0) 0000000000000000...00000000000000000000000000000004
  7 (0x0e0) 0000000000000000...00000000000000000000000000000005
  8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
 level: 2
 readOffset: 3
 objectStart: 2
 params.size: 1
   0: uint256[3][2] = <>
   internalType: uint256[3][]
 dataArray.size: 9
   0 (0x000) 0000000000000000...00000000000000000000000000000040
   1 (0x020) 0000000000000000...0000000000000000000000000000000a
   2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
   3 (0x060) 0000000000000000...00000000000000000000000000000001 <-r
   4 (0x080) 0000000000000000...00000000000000000000000000000002
   5 (0x0a0) 0000000000000000...00000000000000000000000000000003
   6 (0x0c0) 0000000000000000...00000000000000000000000000000004
   7 (0x0e0) 0000000000000000...00000000000000000000000000000005
   8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
  level: 3
  readOffset: 3
  objectStart: 2
  params.size: 2
    0: uint256[3] = <>
    1: uint256[3] = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...0000000000000000000000000000000a
    2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
    3 (0x060) 0000000000000000...00000000000000000000000000000001 <-r
    4 (0x080) 0000000000000000...00000000000000000000000000000002
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003
    6 (0x0c0) 0000000000000000...00000000000000000000000000000004
    7 (0x0e0) 0000000000000000...00000000000000000000000000000005
    8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   level: 4
   readOffset: 3
   objectStart: 2
   params.size: 3
     0: uint256 = <>
     1: uint256 = <>
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001 <-r
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005
     8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 3
     0: uint256 = 1
     1: uint256 = <>
     2: uint256 = <>
   level: 4
   readOffset: 4
   objectStart: 2
   params.size: 3
     0: uint256 = 1
     1: uint256 = <>
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001
     4 (0x080) 0000000000000000...00000000000000000000000000000002 <-r
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005
     8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 3
     0: uint256 = 1
     1: uint256 = 2
     2: uint256 = <>
   level: 4
   readOffset: 5
   objectStart: 2
   params.size: 3
     0: uint256 = 1
     1: uint256 = 2
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003 <-r
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005
     8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 3
     0: uint256 = 1
     1: uint256 = 2
     2: uint256 = 3
  params.size: 2
    0: uint256[3] = [1, 2, 3]
    1: uint256[3] = <>
  level: 3
  readOffset: 6
  objectStart: 2
  params.size: 2
    0: uint256[3] = [1, 2, 3]
    1: uint256[3] = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...0000000000000000000000000000000a
    2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
    3 (0x060) 0000000000000000...00000000000000000000000000000001
    4 (0x080) 0000000000000000...00000000000000000000000000000002
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003
    6 (0x0c0) 0000000000000000...00000000000000000000000000000004 <-r
    7 (0x0e0) 0000000000000000...00000000000000000000000000000005
    8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   level: 4
   readOffset: 6
   objectStart: 2
   params.size: 3
     0: uint256 = <>
     1: uint256 = <>
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004 <-r
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005
     8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 3
     0: uint256 = 4
     1: uint256 = <>
     2: uint256 = <>
   level: 4
   readOffset: 7
   objectStart: 2
   params.size: 3
     0: uint256 = 4
     1: uint256 = <>
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005 <-r
     8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
   params.size: 3
     0: uint256 = 4
     1: uint256 = 5
     2: uint256 = <>
   level: 4
   readOffset: 8
   objectStart: 2
   params.size: 3
     0: uint256 = 4
     1: uint256 = 5
     2: uint256 = <>
   dataArray.size: 9
     0 (0x000) 0000000000000000...00000000000000000000000000000040
     1 (0x020) 0000000000000000...0000000000000000000000000000000a
     2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
     3 (0x060) 0000000000000000...00000000000000000000000000000001
     4 (0x080) 0000000000000000...00000000000000000000000000000002
     5 (0x0a0) 0000000000000000...00000000000000000000000000000003
     6 (0x0c0) 0000000000000000...00000000000000000000000000000004
     7 (0x0e0) 0000000000000000...00000000000000000000000000000005
     8 (0x100) 0000000000000000...00000000000000000000000000000006 <-r

==================================================
   params.size: 3
     0: uint256 = 4
     1: uint256 = 5
     2: uint256 = 6
  params.size: 2
    0: uint256[3] = [1, 2, 3]
    1: uint256[3] = [4, 5, 6]
 params.size: 1
   0: uint256[3][2] = [[1, 2, 3], [4, 5, 6]]
   internalType: uint256[3][]
params.size: 2
  0: uint256[3][] val_0 = [[1, 2, 3], [4, 5, 6]]
  1: uint256 val_1 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: uint256[3][] val_0 = [[1, 2, 3], [4, 5, 6]]
  1: uint256 val_1 = <>
dataArray.size: 9
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o
  1 (0x020) 0000000000000000...0000000000000000000000000000000a <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000002
  3 (0x060) 0000000000000000...00000000000000000000000000000001
  4 (0x080) 0000000000000000...00000000000000000000000000000002
  5 (0x0a0) 0000000000000000...00000000000000000000000000000003
  6 (0x0c0) 0000000000000000...00000000000000000000000000000004
  7 (0x0e0) 0000000000000000...00000000000000000000000000000005
  8 (0x100) 0000000000000000...00000000000000000000000000000006

==================================================
params.size: 2
  0: uint256[3][] val_0 = [[1, 2, 3], [4, 5, 6]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint256[3][] val_0 = [[1, 2, 3], [4, 5, 6]]
  1: uint256 val_1 = 10
==================================================

expected: [[1, 2, 3], [4, 5, 6]], 10 ?
result:   [[1, 2, 3], [4, 5, 6]], 10 ? 1
testName: decoding (uint[3][], uint) two sets of three
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.002 test_2                           ==> 
line: decode|Purposefully bogus data used to core dump, now ignores bad data|function baz(address _from, address _to, uint256 _value, string _transferData)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b8381678000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000025486920426f6220476c617365722d2d20486572652061726520796f757220746f6b656e7321|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000,
testType: decode
testName: Purposefully bogus data used to core dump, now ignores bad data
testSig: function baz(address _from, address _to, uint256 _value, string _transferData) --> baz(address,address,uint256,string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 4
  0: address _from = <>
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o <-r
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000040
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8 <-r
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000040
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = <>
  3: string _transferData = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000 <-r
  3 (0x060) 0000000000000000...00000000000000000000000000000040
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000040 <-r
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
TIME ~ CLOCK - <WARNG> : { "error4": "decodeAnObject: nItems(25981192414412801) > dataArray.size(7)"},
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>
==================================================

expected: 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, ?
result:   0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, ? 1
testName: Purposefully bogus data used to core dump, now ignores bad data
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.003 test_3                           ==> 
line: decode|Corrected data from above (fifth row was bogus above)|function baz(address _from, address _to, uint256 _value, string _transferData)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b8381678000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000025486920426f6220476c617365722d2d20486572652061726520796f757220746f6b656e7321|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens!
testType: decode
testName: Corrected data from above (fifth row was bogus above)
testSig: function baz(address _from, address _to, uint256 _value, string _transferData) --> baz(address,address,uint256,string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 4
  0: address _from = <>
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o <-r
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = <>
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8 <-r
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = <>
  3: string _transferData = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = <>
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000 <-r
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080 <-r
  4 (0x080) 0000000000000000...00000000000000000000000000000025
  5 (0x0a0) 486920426f622047...486572652061726520796f757220746f
  6 (0x0c0) 6b656e7321...6b656e7321

==================================================
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = Hi Bob Glaser-- Here are your tokens!
params.size: 4
  0: address _from = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address _to = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 _value = 462000000000000000000
  3: string _transferData = Hi Bob Glaser-- Here are your tokens!
==================================================

expected: 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens! ?
result:   0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob Glaser-- Here are your tokens! ? 1
testName: Corrected data from above (fifth row was bogus above)
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.004 test_4                           ==> 
line: decode|decoding void  |function baz()      |0x0000000000000000000000000000000000000000000000000000000000000000|<empty>
testType: decode
testName: decoding void
testSig: function baz() --> baz()

--------------------------------------------------
params.size: 0
==================================================

expected:  ?
result:    ? 1
testName: decoding void
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.005 test_5                           ==> 
line: decode|decoding int8  |function baz(int8)  |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int8
testSig: function baz(int8) --> baz(int8)

--------------------------------------------------
expected: -2 ?
result:   -2 ? 1
testName: decoding int8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.006 test_6                           ==> 
line: decode|decoding int16 |function baz(int16) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int16
testSig: function baz(int16) --> baz(int16)

--------------------------------------------------
expected: -2 ?
result:   -2 ? 1
testName: decoding int16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.007 test_7                           ==> 
line: decode|decoding int32 |function baz(int32) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int32
testSig: function baz(int32) --> baz(int32)

--------------------------------------------------
expected: -2 ?
result:   -2 ? 1
testName: decoding int32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.008 test_8                           ==> 
line: decode|decoding int40 |function baz(int40) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int40
testSig: function baz(int40) --> baz(int40)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int40 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: int40 val_0 = -2
params.size: 1
  0: int40 val_0 = -2
==================================================

expected: -2 ?
result:   -2 ? 1
testName: decoding int40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.009 test_9                           ==> 
line: decode|decoding int48 |function baz(int48) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int48
testSig: function baz(int48) --> baz(int48)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int48 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: int48 val_0 = -2
params.size: 1
  0: int48 val_0 = -2
==================================================

expected: -2 ?
result:   -2 ? 1
testName: decoding int48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.010 test_10                          ==> 
line: decode|decoding int56 |function baz(int56) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int56
testSig: function baz(int56) --> baz(int56)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int56 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: int56 val_0 = -2
params.size: 1
  0: int56 val_0 = -2
==================================================

expected: -2 ?
result:   -2 ? 1
testName: decoding int56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.011 test_11                          ==> 
line: decode|decoding int64 |function baz(int64) |0xffffffffffffffffffffffffffffffffffffffffffffffffffffb29c26f344fe|-85091238591234
testType: decode
testName: decoding int64
testSig: function baz(int64) --> baz(int64)

--------------------------------------------------
expected: -85091238591234 ?
result:   -85091238591234 ? 1
testName: decoding int64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.012 test_12                          ==> 
line: decode|decoding int8  |function baz(int8)  |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int8
testSig: function baz(int8) --> baz(int8)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding int8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.013 test_13                          ==> 
line: decode|decoding int16 |function baz(int16) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int16
testSig: function baz(int16) --> baz(int16)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding int16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.014 test_14                          ==> 
line: decode|decoding int32 |function baz(int32) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int32
testSig: function baz(int32) --> baz(int32)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding int32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.015 test_15                          ==> 
line: decode|decoding int40 |function baz(int40) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int40
testSig: function baz(int40) --> baz(int40)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int40 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int40 val_0 = 2
params.size: 1
  0: int40 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.016 test_16                          ==> 
line: decode|decoding int48 |function baz(int48) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int48
testSig: function baz(int48) --> baz(int48)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int48 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int48 val_0 = 2
params.size: 1
  0: int48 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.017 test_17                          ==> 
line: decode|decoding int56 |function baz(int56) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int56
testSig: function baz(int56) --> baz(int56)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int56 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int56 val_0 = 2
params.size: 1
  0: int56 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.018 test_18                          ==> 
line: decode|decoding int64 |function baz(int64) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int64
testSig: function baz(int64) --> baz(int64)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding int64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.019 test_19                          ==> 
line: decode|decoding int72 |function baz(int72) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2
testType: decode
testName: decoding int72
testSig: function baz(int72) --> baz(int72)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int72 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: int72 val_0 = -2
params.size: 1
  0: int72 val_0 = -2
==================================================

expected: -2 ?
result:   -2 ? 1
testName: decoding int72
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.020 test_20                          ==> 
line: decode|decoding int80 |function baz(int80) |0x0000000000000000000000000000000000000000000000000000b29c26f344fe|196383738119422
testType: decode
testName: decoding int80
testSig: function baz(int80) --> baz(int80)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int80 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000b29c26f344fe <=o <-r

==================================================
params.size: 1
  0: int80 val_0 = 196383738119422
params.size: 1
  0: int80 val_0 = 196383738119422
==================================================

expected: 196383738119422 ?
result:   196383738119422 ? 1
testName: decoding int80
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.021 test_21                          ==> 
line: decode|decoding int88 |function baz(int88) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int88
testSig: function baz(int88) --> baz(int88)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int88 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int88 val_0 = 2
params.size: 1
  0: int88 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int88
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.022 test_22                          ==> 
line: decode|decoding int96 |function baz(int96) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int96
testSig: function baz(int96) --> baz(int96)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int96 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int96 val_0 = 2
params.size: 1
  0: int96 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int96
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.023 test_23                          ==> 
line: decode|decoding int104|function baz(int104)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int104
testSig: function baz(int104) --> baz(int104)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int104 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int104 val_0 = 2
params.size: 1
  0: int104 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int104
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.024 test_24                          ==> 
line: decode|decoding int112|function baz(int112)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int112
testSig: function baz(int112) --> baz(int112)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int112 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int112 val_0 = 2
params.size: 1
  0: int112 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int112
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.025 test_25                          ==> 
line: decode|decoding int120|function baz(int120)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding int120
testSig: function baz(int120) --> baz(int120)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int120 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: int120 val_0 = 2
params.size: 1
  0: int120 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding int120
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.026 test_26                          ==> 
line: decode|decoding uint8  |function baz(uint8)  |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|254
testType: decode
testName: decoding uint8
testSig: function baz(uint8) --> baz(uint8)

--------------------------------------------------
expected: 254 ?
result:   254 ? 1
testName: decoding uint8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.027 test_27                          ==> 
line: decode|decoding uint16 |function baz(uint16) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|65534
testType: decode
testName: decoding uint16
testSig: function baz(uint16) --> baz(uint16)

--------------------------------------------------
expected: 65534 ?
result:   65534 ? 1
testName: decoding uint16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.028 test_28                          ==> 
line: decode|decoding uint32 |function baz(uint32) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|4294967294
testType: decode
testName: decoding uint32
testSig: function baz(uint32) --> baz(uint32)

--------------------------------------------------
expected: 4294967294 ?
result:   4294967294 ? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.029 test_29                          ==> 
line: decode|decoding uint40 |function baz(uint40) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|1099511627774
testType: decode
testName: decoding uint40
testSig: function baz(uint40) --> baz(uint40)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint40 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: uint40 val_0 = 1099511627774
params.size: 1
  0: uint40 val_0 = 1099511627774
==================================================

expected: 1099511627774 ?
result:   1099511627774 ? 1
testName: decoding uint40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.030 test_30                          ==> 
line: decode|decoding uint48 |function baz(uint48) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|281474976710654
testType: decode
testName: decoding uint48
testSig: function baz(uint48) --> baz(uint48)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint48 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: uint48 val_0 = 281474976710654
params.size: 1
  0: uint48 val_0 = 281474976710654
==================================================

expected: 281474976710654 ?
result:   281474976710654 ? 1
testName: decoding uint48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.031 test_31                          ==> 
line: decode|decoding uint56 |function baz(uint56) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|72057594037927934
testType: decode
testName: decoding uint56
testSig: function baz(uint56) --> baz(uint56)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint56 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: uint56 val_0 = 72057594037927934
params.size: 1
  0: uint56 val_0 = 72057594037927934
==================================================

expected: 72057594037927934 ?
result:   72057594037927934 ? 1
testName: decoding uint56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.032 test_32                          ==> 
line: decode|decoding uint64 |function baz(uint64) |0xffffffffffffffffffffffffffffffffffffffffffffffffffffb29c26f344fe|18446658982470960382
testType: decode
testName: decoding uint64
testSig: function baz(uint64) --> baz(uint64)

--------------------------------------------------
expected: 18446658982470960382 ?
result:   18446658982470960382 ? 1
testName: decoding uint64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.033 test_33                          ==> 
line: decode|decoding uint8  |function baz(uint8)  |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint8
testSig: function baz(uint8) --> baz(uint8)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding uint8
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.034 test_34                          ==> 
line: decode|decoding uint16 |function baz(uint16) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint16
testSig: function baz(uint16) --> baz(uint16)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding uint16
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.035 test_35                          ==> 
line: decode|decoding uint32 |function baz(uint32) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint32
testSig: function baz(uint32) --> baz(uint32)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.036 test_36                          ==> 
line: decode|decoding uint40 |function baz(uint40) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint40
testSig: function baz(uint40) --> baz(uint40)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint40 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint40 val_0 = 2
params.size: 1
  0: uint40 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint40
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.037 test_37                          ==> 
line: decode|decoding uint48 |function baz(uint48) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint48
testSig: function baz(uint48) --> baz(uint48)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint48 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint48 val_0 = 2
params.size: 1
  0: uint48 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint48
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.038 test_38                          ==> 
line: decode|decoding uint56 |function baz(uint56) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint56
testSig: function baz(uint56) --> baz(uint56)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint56 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint56 val_0 = 2
params.size: 1
  0: uint56 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint56
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.039 test_39                          ==> 
line: decode|decoding uint64 |function baz(uint64) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint64
testSig: function baz(uint64) --> baz(uint64)

--------------------------------------------------
expected: 2 ?
result:   2 ? 1
testName: decoding uint64
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.040 test_40                          ==> 
line: decode|decoding uint72 |function baz(uint72) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint72
testSig: function baz(uint72) --> baz(uint72)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint72 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint72 val_0 = 2
params.size: 1
  0: uint72 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint72
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.041 test_41                          ==> 
line: decode|decoding uint80 |function baz(uint80) |0x0000000000000000000000000000000000000000000000000000b29c26f344fe|196383738119422
testType: decode
testName: decoding uint80
testSig: function baz(uint80) --> baz(uint80)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint80 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000b29c26f344fe <=o <-r

==================================================
params.size: 1
  0: uint80 val_0 = 196383738119422
params.size: 1
  0: uint80 val_0 = 196383738119422
==================================================

expected: 196383738119422 ?
result:   196383738119422 ? 1
testName: decoding uint80
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.042 test_42                          ==> 
line: decode|decoding uint88 |function baz(uint88) |0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|309485009821345068724781054
testType: decode
testName: decoding uint88
testSig: function baz(uint88) --> baz(uint88)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint88 val_0 = <>
dataArray.size: 1
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r

==================================================
params.size: 1
  0: uint88 val_0 = 309485009821345068724781054
params.size: 1
  0: uint88 val_0 = 309485009821345068724781054
==================================================

expected: 309485009821345068724781054 ?
result:   309485009821345068724781054 ? 1
testName: decoding uint88
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.043 test_43                          ==> 
line: decode|decoding uint96 |function baz(uint96) |0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint96
testSig: function baz(uint96) --> baz(uint96)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint96 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint96 val_0 = 2
params.size: 1
  0: uint96 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint96
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.044 test_44                          ==> 
line: decode|decoding uint104|function baz(uint104)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint104
testSig: function baz(uint104) --> baz(uint104)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint104 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint104 val_0 = 2
params.size: 1
  0: uint104 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint104
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.045 test_45                          ==> 
line: decode|decoding uint112|function baz(uint112)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint112
testSig: function baz(uint112) --> baz(uint112)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint112 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint112 val_0 = 2
params.size: 1
  0: uint112 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint112
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.046 test_46                          ==> 
line: decode|decoding uint120|function baz(uint120)|0x0000000000000000000000000000000000000000000000000000000000000002|2
testType: decode
testName: decoding uint120
testSig: function baz(uint120) --> baz(uint120)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint120 val_0 = <>
dataArray.size: 1
  0 (0x000) 0000000000000000...00000000000000000000000000000002 <=o <-r

==================================================
params.size: 1
  0: uint120 val_0 = 2
params.size: 1
  0: uint120 val_0 = 2
==================================================

expected: 2 ?
result:   2 ? 1
testName: decoding uint120
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.047 test_47                          ==> 
line: decode|decoding uint32|function baz(uint32)|0x000000000000000000000000000000000000000000000000000000000000002a|42
testType: decode
testName: decoding uint32
testSig: function baz(uint32) --> baz(uint32)

--------------------------------------------------
expected: 42 ?
result:   42 ? 1
testName: decoding uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.048 test_48                          ==> 
line: decode|decoding string|function baz(string)|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c64000000000000000000000000000000000000000000|hello world
testType: decode
testName: decoding string
testSig: function baz(string) --> baz(string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: string val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...0000000000000000000000000000000b
  2 (0x040) 68656c6c6f20776f...00000000000000000000000000000000

==================================================
params.size: 1
  0: string val_0 = hello world
params.size: 1
  0: string val_0 = hello world
==================================================

expected: hello world ?
result:   hello world ? 1
testName: decoding string
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.049 test_49                          ==> 
line: decode|decoding bool,uint32|function baz(bool,uint32)|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|true, 42
testType: decode
testName: decoding bool,uint32
testSig: function baz(bool,uint32) --> baz(bool,uint32)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: bool val_0 = <>
  1: uint32 val_1 = <>
dataArray.size: 2
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...0000000000000000000000000000002a

==================================================
params.size: 2
  0: bool val_0 = true
  1: uint32 val_1 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: bool val_0 = true
  1: uint32 val_1 = <>
dataArray.size: 2
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...0000000000000000000000000000002a <-r

==================================================
params.size: 2
  0: bool val_0 = true
  1: uint32 val_1 = 42
params.size: 2
  0: bool val_0 = true
  1: uint32 val_1 = 42
==================================================

expected: true, 42 ?
result:   true, 42 ? 1
testName: decoding bool,uint32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.050 test_50                          ==> 
line: decode|decoding bytes|function baz(bytes)|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002c68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c640000000000000000000000000000000000000000|0x68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c64
testType: decode
testName: decoding bytes
testSig: function baz(bytes) --> baz(bytes)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: bytes val_0 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...0000000000000000000000000000002c
  2 (0x040) 68656c6c6f20776f...20776f726c6468656c6c6f20776f726c
  3 (0x060) 6468656c6c6f2077...00000000000000000000000000000000

==================================================
params.size: 1
  0: bytes val_0 = 0x68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c64
params.size: 1
  0: bytes val_0 = 0x68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c64
==================================================

expected: 0x68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c64 ?
result:   0x68656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c6468656c6c6f20776f726c64 ? 1
testName: decoding bytes
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.051 test_51                          ==> 
line: decode|decode bytes[] and bytes32 three byte32s in array and extra bytes32|function baz(bytes[] a, bytes32 b)|0x0000000000000000000000000000000000000000000000000000000000000040cb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb898110000000000000000000000000000000000000000000000000000000000000003000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573|[0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
testType: decode
testName: decode bytes[] and bytes32 three byte32s in array and extra bytes32
testSig: function baz(bytes[] a, bytes32 b) --> baz(bytes[],bytes32)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: bytes[] a = <>
  1: bytes32 b = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o <-r
  1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c
  4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc
  5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573

==================================================
 level: 2
 readOffset: 3
 objectStart: 2
 params.size: 1
   0: bytes32[3] = <>
   internalType: bytes[]
 dataArray.size: 6
   0 (0x000) 0000000000000000...00000000000000000000000000000040
   1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <=o
   3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c <-r
   4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc
   5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573

==================================================
  level: 3
  readOffset: 3
  objectStart: 2
  params.size: 3
    0: bytes32 = <>
    1: bytes32 = <>
    2: bytes32 = <>
  dataArray.size: 6
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <=o
    3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c <-r
    4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc
    5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573

==================================================
  params.size: 3
    0: bytes32 = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    1: bytes32 = <>
    2: bytes32 = <>
  level: 3
  readOffset: 4
  objectStart: 2
  params.size: 3
    0: bytes32 = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    1: bytes32 = <>
    2: bytes32 = <>
  dataArray.size: 6
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <=o
    3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c
    4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc <-r
    5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573

==================================================
  params.size: 3
    0: bytes32 = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    1: bytes32 = 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    2: bytes32 = <>
  level: 3
  readOffset: 5
  objectStart: 2
  params.size: 3
    0: bytes32 = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    1: bytes32 = 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    2: bytes32 = <>
  dataArray.size: 6
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <=o
    3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c
    4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc
    5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573 <-r

==================================================
  params.size: 3
    0: bytes32 = 0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c
    1: bytes32 = 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc
    2: bytes32 = 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573
 params.size: 1
   0: bytes32[3] = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
   internalType: bytes[]
params.size: 2
  0: bytes[] a = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
  1: bytes32 b = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: bytes[] a = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
  1: bytes32 b = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o
  1 (0x020) cb93e7ddea88eb37...f7df44079d05905006044dd14bb89811 <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 000bf9f2adc93a1d...f99c467a2812b354d70a07f0b3cdc58c
  4 (0x080) 0007cc5734453f8d...50dc4a432aaa5be5b048c59e0b5ac5fc
  5 (0x0a0) 00120aa407bdbff1...56b589b427167ec414bccbe0cfdfd573

==================================================
params.size: 2
  0: bytes[] a = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
  1: bytes32 b = 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
params.size: 2
  0: bytes[] a = [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573]
  1: bytes32 b = 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811
==================================================

expected: [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811 ?
result:   [0x000bf9f2adc93a1da7b9e61f44ee6504f99c467a2812b354d70a07f0b3cdc58c, 0x0007cc5734453f8d7bbacd4b3a8e753250dc4a432aaa5be5b048c59e0b5ac5fc, 0x00120aa407bdbff1d93ea98dafc5f1da56b589b427167ec414bccbe0cfdfd573], 0xcb93e7ddea88eb37f5419784b399cf13f7df44079d05905006044dd14bb89811 ? 1
testName: decode bytes[] and bytes32 three byte32s in array and extra bytes32
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.052 test_52                          ==> 
line: decode|decoding bool, uint256[] one bool and one uint256|function bz(bool, uint256[])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|true, [42]
testType: decode
testName: decoding bool, uint256[] one bool and one uint256
testSig: function bz(bool, uint256[]) --> bz(bool,uint256[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: bool val_0 = <>
  1: uint256[] val_1 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000040
  2 (0x040) 0000000000000000...00000000000000000000000000000001
  3 (0x060) 0000000000000000...0000000000000000000000000000002a

==================================================
params.size: 2
  0: bool val_0 = true
  1: uint256[] val_1 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: bool val_0 = true
  1: uint256[] val_1 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000040 <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000001
  3 (0x060) 0000000000000000...0000000000000000000000000000002a

==================================================
 level: 2
 readOffset: 3
 objectStart: 2
 params.size: 1
   0: uint256[1] = <>
   internalType: uint256[]
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000001
   1 (0x020) 0000000000000000...00000000000000000000000000000040
   2 (0x040) 0000000000000000...00000000000000000000000000000001 <=o
   3 (0x060) 0000000000000000...0000000000000000000000000000002a <-r

==================================================
  level: 3
  readOffset: 3
  objectStart: 2
  params.size: 1
    0: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000001
    1 (0x020) 0000000000000000...00000000000000000000000000000040
    2 (0x040) 0000000000000000...00000000000000000000000000000001 <=o
    3 (0x060) 0000000000000000...0000000000000000000000000000002a <-r

==================================================
  params.size: 1
    0: uint256 = 42
 params.size: 1
   0: uint256[1] = [42]
   internalType: uint256[]
params.size: 2
  0: bool val_0 = true
  1: uint256[] val_1 = [42]
params.size: 2
  0: bool val_0 = true
  1: uint256[] val_1 = [42]
==================================================

expected: true, [42] ?
result:   true, [42] ? 1
testName: decoding bool, uint256[] one bool and one uint256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.053 test_53                          ==> 
line: decode|decoding uint256[], bool one uint256 and one bool|function baz(uint256[], bool)|0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002a|[42], true
testType: decode
testName: decoding uint256[], bool one uint256 and one bool
testSig: function baz(uint256[], bool) --> baz(uint256[],bool)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint256[] val_0 = <>
  1: bool val_1 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000001
  2 (0x040) 0000000000000000...00000000000000000000000000000001
  3 (0x060) 0000000000000000...0000000000000000000000000000002a

==================================================
 level: 2
 readOffset: 3
 objectStart: 2
 params.size: 1
   0: uint256[1] = <>
   internalType: uint256[]
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000040
   1 (0x020) 0000000000000000...00000000000000000000000000000001
   2 (0x040) 0000000000000000...00000000000000000000000000000001 <=o
   3 (0x060) 0000000000000000...0000000000000000000000000000002a <-r

==================================================
  level: 3
  readOffset: 3
  objectStart: 2
  params.size: 1
    0: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...00000000000000000000000000000001
    2 (0x040) 0000000000000000...00000000000000000000000000000001 <=o
    3 (0x060) 0000000000000000...0000000000000000000000000000002a <-r

==================================================
  params.size: 1
    0: uint256 = 42
 params.size: 1
   0: uint256[1] = [42]
   internalType: uint256[]
params.size: 2
  0: uint256[] val_0 = [42]
  1: bool val_1 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: uint256[] val_0 = [42]
  1: bool val_1 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000001 <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000001
  3 (0x060) 0000000000000000...0000000000000000000000000000002a

==================================================
params.size: 2
  0: uint256[] val_0 = [42]
  1: bool val_1 = true
params.size: 2
  0: uint256[] val_0 = [42]
  1: bool val_1 = true
==================================================

expected: [42], true ?
result:   [42], true ? 1
testName: decoding uint256[], bool one uint256 and one bool
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.054 test_54                          ==> 
line: decode|decoding uint256[] three uint256s|function baz(uint256[])|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint256[] three uint256s
testSig: function baz(uint256[]) --> baz(uint256[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint256[] val_0 = <>
dataArray.size: 5
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000003
  2 (0x040) 0000000000000000...00000000000000000000000000000001
  3 (0x060) 0000000000000000...00000000000000000000000000000002
  4 (0x080) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 2
 objectStart: 1
 params.size: 1
   0: uint256[3] = <>
   internalType: uint256[]
 dataArray.size: 5
   0 (0x000) 0000000000000000...00000000000000000000000000000020
   1 (0x020) 0000000000000000...00000000000000000000000000000003 <=o
   2 (0x040) 0000000000000000...00000000000000000000000000000001 <-r
   3 (0x060) 0000000000000000...00000000000000000000000000000002
   4 (0x080) 0000000000000000...00000000000000000000000000000003

==================================================
  level: 3
  readOffset: 2
  objectStart: 1
  params.size: 3
    0: uint256 = <>
    1: uint256 = <>
    2: uint256 = <>
  dataArray.size: 5
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000003 <=o
    2 (0x040) 0000000000000000...00000000000000000000000000000001 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000003

==================================================
  params.size: 3
    0: uint256 = 1
    1: uint256 = <>
    2: uint256 = <>
  level: 3
  readOffset: 3
  objectStart: 1
  params.size: 3
    0: uint256 = 1
    1: uint256 = <>
    2: uint256 = <>
  dataArray.size: 5
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000003 <=o
    2 (0x040) 0000000000000000...00000000000000000000000000000001
    3 (0x060) 0000000000000000...00000000000000000000000000000002 <-r
    4 (0x080) 0000000000000000...00000000000000000000000000000003

==================================================
  params.size: 3
    0: uint256 = 1
    1: uint256 = 2
    2: uint256 = <>
  level: 3
  readOffset: 4
  objectStart: 1
  params.size: 3
    0: uint256 = 1
    1: uint256 = 2
    2: uint256 = <>
  dataArray.size: 5
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000003 <=o
    2 (0x040) 0000000000000000...00000000000000000000000000000001
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000003 <-r

==================================================
  params.size: 3
    0: uint256 = 1
    1: uint256 = 2
    2: uint256 = 3
 params.size: 1
   0: uint256[3] = [1, 2, 3]
   internalType: uint256[]
params.size: 1
  0: uint256[] val_0 = [1, 2, 3]
params.size: 1
  0: uint256[] val_0 = [1, 2, 3]
==================================================

expected: [1, 2, 3] ?
result:   [1, 2, 3] ? 1
testName: decoding uint256[] three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.055 test_55                          ==> 
line: decode|decoding uint32 array three uint256s|function baz(uint32[3])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint32 array three uint256s
testSig: function baz(uint32[3]) --> baz(uint32[3])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint32[3] val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: uint32 = <>
   1: uint32 = <>
   2: uint32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: uint32 = 1
   1: uint32 = <>
   2: uint32 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 3
   0: uint32 = 1
   1: uint32 = <>
   2: uint32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: uint32 = 1
   1: uint32 = 2
   2: uint32 = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: uint32 = 1
   1: uint32 = 2
   2: uint32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r

==================================================
 params.size: 3
   0: uint32 = 1
   1: uint32 = 2
   2: uint32 = 3
params.size: 1
  0: uint32[3] val_0 = [1, 2, 3]
params.size: 1
  0: uint32[3] val_0 = [1, 2, 3]
==================================================

expected: [1, 2, 3] ?
result:   [1, 2, 3] ? 1
testName: decoding uint32 array three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.056 test_56                          ==> 
line: decode|decoding uint array three uint256s|function baz(uint[3])|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2, 3]
testType: decode
testName: decoding uint array three uint256s
testSig: function baz(uint[3]) --> baz(uint256[3])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint256[3] val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: uint256 = <>
   1: uint256 = <>
   2: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: uint256 = 1
   1: uint256 = <>
   2: uint256 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 3
   0: uint256 = 1
   1: uint256 = <>
   2: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: uint256 = 1
   1: uint256 = 2
   2: uint256 = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: uint256 = 1
   1: uint256 = 2
   2: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r

==================================================
 params.size: 3
   0: uint256 = 1
   1: uint256 = 2
   2: uint256 = 3
params.size: 1
  0: uint256[3] val_0 = [1, 2, 3]
params.size: 1
  0: uint256[3] val_0 = [1, 2, 3]
==================================================

expected: [1, 2, 3] ?
result:   [1, 2, 3] ? 1
testName: decoding uint array three uint256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.057 test_57                          ==> 
line: decode|decoding int32 array three uint32s|function baz(int32[3])|0x000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[42, 2, 3]
testType: decode
testName: decoding int32 array three uint32s
testSig: function baz(int32[3]) --> baz(int32[3])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int32[3] val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: int32 = <>
   1: int32 = <>
   2: int32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: int32 = 42
   1: int32 = <>
   2: int32 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 3
   0: int32 = 42
   1: int32 = <>
   2: int32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 3
   0: int32 = 42
   1: int32 = 2
   2: int32 = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: int32 = 42
   1: int32 = 2
   2: int32 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r

==================================================
 params.size: 3
   0: int32 = 42
   1: int32 = 2
   2: int32 = 3
params.size: 1
  0: int32[3] val_0 = [42, 2, 3]
params.size: 1
  0: int32[3] val_0 = [42, 2, 3]
==================================================

expected: [42, 2, 3] ?
result:   [42, 2, 3] ? 1
testName: decoding int32 array three uint32s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.058 test_58                          ==> 
line: decode|decode int[3] three int256s|function baz(int[3])|0x000000000000000000000000000000000000000000000000000000000000002afffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb|[42, -3, -5]
testType: decode
testName: decode int[3] three int256s
testSig: function baz(int[3]) --> baz(int256[3])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: int256[3] val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o <-r
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffd
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffb

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: int256 = <>
   1: int256 = <>
   2: int256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o <-r
   1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffd
   2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffb

==================================================
 params.size: 3
   0: int256 = 42
   1: int256 = <>
   2: int256 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 3
   0: int256 = 42
   1: int256 = <>
   2: int256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o
   1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffd <-r
   2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffb

==================================================
 params.size: 3
   0: int256 = 42
   1: int256 = -3
   2: int256 = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: int256 = 42
   1: int256 = -3
   2: int256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...0000000000000000000000000000002a <=o
   1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffd
   2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffb <-r

==================================================
 params.size: 3
   0: int256 = 42
   1: int256 = -3
   2: int256 = -5
params.size: 1
  0: int256[3] val_0 = [42, -3, -5]
params.size: 1
  0: int256[3] val_0 = [42, -3, -5]
==================================================

expected: [42, -3, -5] ?
result:   [42, -3, -5] ? 1
testName: decode int[3] three int256s
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.059 test_59                          ==> 
line: decode|decoding (uint[2], uint) two uint256s and a uint256|function baz(uint[2],       uint)|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000003|[1, 92], 3
testType: decode
testName: decoding (uint[2], uint) two uint256s and a uint256
testSig: function baz(uint[2],       uint) --> baz(uint256[2],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint256[2] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...0000000000000000000000000000005c
  2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: uint256 = <>
   1: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...0000000000000000000000000000005c
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 2
   0: uint256 = 1
   1: uint256 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 2
   0: uint256 = 1
   1: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...0000000000000000000000000000005c <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 2
   0: uint256 = 1
   1: uint256 = 92
params.size: 2
  0: uint256[2] val_0 = [1, 92]
  1: uint256 val_1 = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 2
  0: uint256[2] val_0 = [1, 92]
  1: uint256 val_1 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...0000000000000000000000000000005c
  2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r

==================================================
params.size: 2
  0: uint256[2] val_0 = [1, 92]
  1: uint256 val_1 = 3
params.size: 2
  0: uint256[2] val_0 = [1, 92]
  1: uint256 val_1 = 3
==================================================

expected: [1, 92], 3 ?
result:   [1, 92], 3 ? 1
testName: decoding (uint[2], uint) two uint256s and a uint256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.060 test_60                          ==> 
line: decode|should decode latin and extensions|function baz(string)|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000017657468657265756d20737ac3a16dc3ad74c3b367c3a970000000000000000000|ethereum számítógép
testType: decode
testName: should decode latin and extensions
testSig: function baz(string) --> baz(string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: string val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000017
  2 (0x040) 657468657265756d...74c3b367c3a970000000000000000000

==================================================
params.size: 1
  0: string val_0 = ethereum számítógép
params.size: 1
  0: string val_0 = ethereum számítógép
==================================================

expected: ethereum számítógép ?
result:   ethereum számítógép ? 1
testName: should decode latin and extensions
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.061 test_61                          ==> 
line: decode|should decode non-latin characters|function baz(string)|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000018e4b8bae4bb80e4b988e982a3e4b988e8aea4e79c9fefbc9f0000000000000000|为什么那么认真？
testType: decode
testName: should decode non-latin characters
testSig: function baz(string) --> baz(string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: string val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000018
  2 (0x040) e4b8bae4bb80e4b9...aea4e79c9fefbc9f0000000000000000

==================================================
params.size: 1
  0: string val_0 = 为什么那么认真？
params.size: 1
  0: string val_0 = 为什么那么认真？
==================================================

expected: 为什么那么认真？ ?
result:   为什么那么认真？ ? 1
testName: should decode non-latin characters
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.062 test_62                          ==> 
line: decode|decoding (uint[2][2]) two sets of two|function baz(uint[2][2])|0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008|[[1, 2], [4, 8]]
testType: decode
testName: decoding (uint[2][2]) two sets of two
testSig: function baz(uint[2][2]) --> baz(uint256[2][2])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint256[2][2] val_0 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000004
  3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: uint256[2] = <>
   1: uint256[2] = <>
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000004
   3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
  level: 3
  readOffset: 0
  objectStart: 0
  params.size: 2
    0: uint256 = <>
    1: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000004
    3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
  params.size: 2
    0: uint256 = 1
    1: uint256 = <>
  level: 3
  readOffset: 1
  objectStart: 0
  params.size: 2
    0: uint256 = 1
    1: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
    2 (0x040) 0000000000000000...00000000000000000000000000000004
    3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
  params.size: 2
    0: uint256 = 1
    1: uint256 = 2
 params.size: 2
   0: uint256[2] = [1, 2]
   1: uint256[2] = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 2
   0: uint256[2] = [1, 2]
   1: uint256[2] = <>
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000004 <-r
   3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
  level: 3
  readOffset: 2
  objectStart: 0
  params.size: 2
    0: uint256 = <>
    1: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000004 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000008

==================================================
  params.size: 2
    0: uint256 = 4
    1: uint256 = <>
  level: 3
  readOffset: 3
  objectStart: 0
  params.size: 2
    0: uint256 = 4
    1: uint256 = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000004
    3 (0x060) 0000000000000000...00000000000000000000000000000008 <-r

==================================================
  params.size: 2
    0: uint256 = 4
    1: uint256 = 8
 params.size: 2
   0: uint256[2] = [1, 2]
   1: uint256[2] = [4, 8]
params.size: 1
  0: uint256[2][2] val_0 = [[1, 2], [4, 8]]
params.size: 1
  0: uint256[2][2] val_0 = [[1, 2], [4, 8]]
==================================================

expected: [[1, 2], [4, 8]] ?
result:   [[1, 2], [4, 8]] ? 1
testName: decoding (uint[2][2]) two sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.063 test_63                          ==> 
line: decode|decoding (uint128[2]      [3 ], uint) three sets of two|function baz(uint128[2  ]       [3],uint)|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decoding (uint128[2]      [3 ], uint) three sets of two
testSig: function baz(uint128[2  ]       [3],uint) --> baz(uint128[2][3],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint128[2][3] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: uint128[2] = <>
   1: uint128[2] = <>
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 0
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 1
    1: uint128 = <>
  level: 3
  readOffset: 1
  objectStart: 0
  params.size: 2
    0: uint128 = 1
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 1
    1: uint128 = 2
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = <>
   2: uint128[2] = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = <>
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 2
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 3
    1: uint128 = <>
  level: 3
  readOffset: 3
  objectStart: 0
  params.size: 2
    0: uint128 = 3
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004 <-r
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 3
    1: uint128 = 4
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = <>
 level: 2
 readOffset: 4
 objectStart: 0
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 4
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 5
    1: uint128 = <>
  level: 3
  readOffset: 5
  objectStart: 0
  params.size: 2
    0: uint128 = 5
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006 <-r
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 5
    1: uint128 = 6
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = [5, 6]
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>

level: 1
readOffset: 6
objectStart: 0
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...0000000000000000000000000000000a <-r

==================================================
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
==================================================

expected: [[1, 2], [3, 4], [5, 6]], 10 ?
result:   [[1, 2], [3, 4], [5, 6]], 10 ? 1
testName: decoding (uint128[2]      [3 ], uint) three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.064 test_64                          ==> 
line: decode|decoding (uint128[2][3][2], uint) two sets of three sets of two|function baz(uint128[2]  [3][2], uint)|0xa|[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10
testType: decode
testName: decoding (uint128[2][3][2], uint) two sets of three sets of two
testSig: function baz(uint128[2]  [3][2], uint) --> baz(uint128[2][3][2],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint128[2][3][2] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...00000000000000000000000000000001
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000005
 11 (0x160) 0000000000000000...00000000000000000000000000000006
 12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: uint128[2][3] = <>
   1: uint128[2][3] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...00000000000000000000000000000001
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000005
  11 (0x160) 0000000000000000...00000000000000000000000000000006
  12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 0
  objectStart: 0
  params.size: 3
    0: uint128[2] = <>
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 0
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   level: 4
   readOffset: 1
   objectStart: 0
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = 2
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  level: 3
  readOffset: 2
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 2
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   level: 4
   readOffset: 3
   objectStart: 0
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004 <-r
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = 4
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  level: 3
  readOffset: 4
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 4
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   level: 4
   readOffset: 5
   objectStart: 0
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006 <-r
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = 6
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = [5, 6]
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = <>
 level: 2
 readOffset: 6
 objectStart: 0
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000005
  11 (0x160) 0000000000000000...00000000000000000000000000000006
  12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 6
  objectStart: 0
  params.size: 3
    0: uint128[2] = <>
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 6
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   level: 4
   readOffset: 7
   objectStart: 0
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002 <-r
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = 2
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  level: 3
  readOffset: 8
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 8
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   level: 4
   readOffset: 9
   objectStart: 0
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004 <-r
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = 4
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  level: 3
  readOffset: 10
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005 <-r
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 10
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005 <-r
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   level: 4
   readOffset: 11
   objectStart: 0
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006 <-r
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = 6
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = [5, 6]
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = <>

level: 1
readOffset: 12
objectStart: 0
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...00000000000000000000000000000001
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000005
 11 (0x160) 0000000000000000...00000000000000000000000000000006
 12 (0x180) 0000000000000000...0000000000000000000000000000000a <-r

==================================================
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = 10
==================================================

expected: [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10 ?
result:   [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10 ? 1
testName: decoding (uint128[2][3][2], uint) two sets of three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.065 test_65                          ==> 
line: decode|decoding uint[2] one set of two|function baz(uint[2]     )|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003|[1, 2]
testType: decode
testName: decoding uint[2] one set of two
testSig: function baz(uint[2]     ) --> baz(uint256[2])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: uint256[2] val_0 = <>
dataArray.size: 3
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: uint256 = <>
   1: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 2
   0: uint256 = 1
   1: uint256 = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 2
   0: uint256 = 1
   1: uint256 = <>
 dataArray.size: 3
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
   2 (0x040) 0000000000000000...00000000000000000000000000000003

==================================================
 params.size: 2
   0: uint256 = 1
   1: uint256 = 2
params.size: 1
  0: uint256[2] val_0 = [1, 2]
params.size: 1
  0: uint256[2] val_0 = [1, 2]
==================================================

expected: [1, 2] ?
result:   [1, 2] ? 1
testName: decoding uint[2] one set of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.066 test_66                          ==> 
line: decode|decoding address|function baz(address)|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413|0xbb9bc244d798123fde783fcc1c72d3bb8c189413
testType: decode
testName: decoding address
testSig: function baz(address) --> baz(address)

--------------------------------------------------
expected: 0xbb9bc244d798123fde783fcc1c72d3bb8c189413 ?
result:   0xbb9bc244d798123fde783fcc1c72d3bb8c189413 ? 1
testName: decoding address
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.067 test_67                          ==> 
line: decode|decoding address,address|function baz(  address,address )|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
testType: decode
testName: decoding address,address
testSig: function baz(  address,address ) --> baz(address,address)

--------------------------------------------------
expected: 0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607 ?
result:   0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607 ? 1
testName: decoding address,address
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.068 test_68                          ==> 
line: decode|decoding address[] one set of two addresses|function baz(address[])|0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
testType: decode
testName: decoding address[] one set of two addresses
testSig: function baz(address[]) --> baz(address[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: address[] val_0 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
  3 (0x060) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607

==================================================
 level: 2
 readOffset: 2
 objectStart: 1
 params.size: 1
   0: address[2] = <>
   internalType: address[]
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000020
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
   2 (0x040) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <-r
   3 (0x060) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607

==================================================
  level: 3
  readOffset: 2
  objectStart: 1
  params.size: 2
    0: address = <>
    1: address = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
    2 (0x040) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <-r
    3 (0x060) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607

==================================================
  params.size: 2
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = <>
  level: 3
  readOffset: 3
  objectStart: 1
  params.size: 2
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
    2 (0x040) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
    3 (0x060) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607 <-r

==================================================
  params.size: 2
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
 params.size: 1
   0: address[2] = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
   internalType: address[]
params.size: 1
  0: address[] val_0 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
params.size: 1
  0: address[] val_0 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
==================================================

expected: [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607] ?
result:   [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607] ? 1
testName: decoding address[] one set of two addresses
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.069 test_69                          ==> 
line: decode|decoding address[2] one set of two addresses|function baz(address[2])|0x000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607|[0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
testType: decode
testName: decoding address[2] one set of two addresses
testSig: function baz(address[2]) --> baz(address[2])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: address[2] val_0 = <>
dataArray.size: 2
  0 (0x000) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <=o <-r
  1 (0x020) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: address = <>
   1: address = <>
 dataArray.size: 2
   0 (0x000) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <=o <-r
   1 (0x020) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607

==================================================
 params.size: 2
   0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
   1: address = <>
 level: 2
 readOffset: 1
 objectStart: 0
 params.size: 2
   0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
   1: address = <>
 dataArray.size: 2
   0 (0x000) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <=o
   1 (0x020) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607 <-r

==================================================
 params.size: 2
   0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
   1: address = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
params.size: 1
  0: address[2] val_0 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
params.size: 1
  0: address[2] val_0 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607]
==================================================

expected: [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607] ?
result:   [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607] ? 1
testName: decoding address[2] one set of two addresses
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.070 test_70                          ==> 
line: decode|decoding uint256[], uint[], uint256[] three sets of two items each|function baz(uint256[] a,uint[] b,uint256[] c)|0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000015af1d78b58c400000000000000000000000000000000000000000000000000015af1d78b58c4000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000001bc16d674ec80000|[6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000]
testType: decode
testName: decoding uint256[], uint[], uint256[] three sets of two items each
testSig: function baz(uint256[] a,uint[] b,uint256[] c) --> baz(uint256[],uint256[],uint256[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 3
  0: uint256[] a = <>
  1: uint256[] b = <>
  2: uint256[] c = <>
dataArray.size: 12
  0 (0x000) 0000000000000000...00000000000000000000000000000060 <=o <-r
  1 (0x020) 0000000000000000...000000000000000000000000000000c0
  2 (0x040) 0000000000000000...00000000000000000000000000000120
  3 (0x060) 0000000000000000...00000000000000000000000000000002
  4 (0x080) 0000000000000000...00000000000000000000000000000006
  5 (0x0a0) 0000000000000000...00000000000000000000000000000005
  6 (0x0c0) 0000000000000000...00000000000000000000000000000002
  7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
  8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
  9 (0x120) 0000000000000000...00000000000000000000000000000002
 10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
 11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
 level: 2
 readOffset: 4
 objectStart: 3
 params.size: 1
   0: uint256[2] = <>
   internalType: uint256[]
 dataArray.size: 12
   0 (0x000) 0000000000000000...00000000000000000000000000000060
   1 (0x020) 0000000000000000...000000000000000000000000000000c0
   2 (0x040) 0000000000000000...00000000000000000000000000000120
   3 (0x060) 0000000000000000...00000000000000000000000000000002 <=o
   4 (0x080) 0000000000000000...00000000000000000000000000000006 <-r
   5 (0x0a0) 0000000000000000...00000000000000000000000000000005
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002
   7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
   8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
   9 (0x120) 0000000000000000...00000000000000000000000000000002
  10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
  11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  level: 3
  readOffset: 4
  objectStart: 3
  params.size: 2
    0: uint256 = <>
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002 <=o
    4 (0x080) 0000000000000000...00000000000000000000000000000006 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
    9 (0x120) 0000000000000000...00000000000000000000000000000002
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  params.size: 2
    0: uint256 = 6
    1: uint256 = <>
  level: 3
  readOffset: 5
  objectStart: 3
  params.size: 2
    0: uint256 = 6
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002 <=o
    4 (0x080) 0000000000000000...00000000000000000000000000000006
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005 <-r
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
    9 (0x120) 0000000000000000...00000000000000000000000000000002
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  params.size: 2
    0: uint256 = 6
    1: uint256 = 5
 params.size: 1
   0: uint256[2] = [6, 5]
   internalType: uint256[]
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = <>
  2: uint256[] c = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = <>
  2: uint256[] c = <>
dataArray.size: 12
  0 (0x000) 0000000000000000...00000000000000000000000000000060 <=o
  1 (0x020) 0000000000000000...000000000000000000000000000000c0 <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000120
  3 (0x060) 0000000000000000...00000000000000000000000000000002
  4 (0x080) 0000000000000000...00000000000000000000000000000006
  5 (0x0a0) 0000000000000000...00000000000000000000000000000005
  6 (0x0c0) 0000000000000000...00000000000000000000000000000002
  7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
  8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
  9 (0x120) 0000000000000000...00000000000000000000000000000002
 10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
 11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
 level: 2
 readOffset: 7
 objectStart: 6
 params.size: 1
   0: uint256[2] = <>
   internalType: uint256[]
 dataArray.size: 12
   0 (0x000) 0000000000000000...00000000000000000000000000000060
   1 (0x020) 0000000000000000...000000000000000000000000000000c0
   2 (0x040) 0000000000000000...00000000000000000000000000000120
   3 (0x060) 0000000000000000...00000000000000000000000000000002
   4 (0x080) 0000000000000000...00000000000000000000000000000006
   5 (0x0a0) 0000000000000000...00000000000000000000000000000005
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002 <=o
   7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000 <-r
   8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
   9 (0x120) 0000000000000000...00000000000000000000000000000002
  10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
  11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  level: 3
  readOffset: 7
  objectStart: 6
  params.size: 2
    0: uint256 = <>
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000006
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002 <=o
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000 <-r
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
    9 (0x120) 0000000000000000...00000000000000000000000000000002
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  params.size: 2
    0: uint256 = 25000000000000000000
    1: uint256 = <>
  level: 3
  readOffset: 8
  objectStart: 6
  params.size: 2
    0: uint256 = 25000000000000000000
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000006
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002 <=o
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000 <-r
    9 (0x120) 0000000000000000...00000000000000000000000000000002
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  params.size: 2
    0: uint256 = 25000000000000000000
    1: uint256 = 25000000000000000000
 params.size: 1
   0: uint256[2] = [25000000000000000000, 25000000000000000000]
   internalType: uint256[]
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = [25000000000000000000, 25000000000000000000]
  2: uint256[] c = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = [25000000000000000000, 25000000000000000000]
  2: uint256[] c = <>
dataArray.size: 12
  0 (0x000) 0000000000000000...00000000000000000000000000000060 <=o
  1 (0x020) 0000000000000000...000000000000000000000000000000c0
  2 (0x040) 0000000000000000...00000000000000000000000000000120 <-r
  3 (0x060) 0000000000000000...00000000000000000000000000000002
  4 (0x080) 0000000000000000...00000000000000000000000000000006
  5 (0x0a0) 0000000000000000...00000000000000000000000000000005
  6 (0x0c0) 0000000000000000...00000000000000000000000000000002
  7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
  8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
  9 (0x120) 0000000000000000...00000000000000000000000000000002
 10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
 11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
 level: 2
 readOffset: 10
 objectStart: 9
 params.size: 1
   0: uint256[2] = <>
   internalType: uint256[]
 dataArray.size: 12
   0 (0x000) 0000000000000000...00000000000000000000000000000060
   1 (0x020) 0000000000000000...000000000000000000000000000000c0
   2 (0x040) 0000000000000000...00000000000000000000000000000120
   3 (0x060) 0000000000000000...00000000000000000000000000000002
   4 (0x080) 0000000000000000...00000000000000000000000000000006
   5 (0x0a0) 0000000000000000...00000000000000000000000000000005
   6 (0x0c0) 0000000000000000...00000000000000000000000000000002
   7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
   8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
   9 (0x120) 0000000000000000...00000000000000000000000000000002 <=o
  10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000 <-r
  11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  level: 3
  readOffset: 10
  objectStart: 9
  params.size: 2
    0: uint256 = <>
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000006
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
    9 (0x120) 0000000000000000...00000000000000000000000000000002 <=o
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000 <-r
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000

==================================================
  params.size: 2
    0: uint256 = 2000000000000000000
    1: uint256 = <>
  level: 3
  readOffset: 11
  objectStart: 9
  params.size: 2
    0: uint256 = 2000000000000000000
    1: uint256 = <>
  dataArray.size: 12
    0 (0x000) 0000000000000000...00000000000000000000000000000060
    1 (0x020) 0000000000000000...000000000000000000000000000000c0
    2 (0x040) 0000000000000000...00000000000000000000000000000120
    3 (0x060) 0000000000000000...00000000000000000000000000000002
    4 (0x080) 0000000000000000...00000000000000000000000000000006
    5 (0x0a0) 0000000000000000...00000000000000000000000000000005
    6 (0x0c0) 0000000000000000...00000000000000000000000000000002
    7 (0x0e0) 0000000000000000...00000000000000015af1d78b58c40000
    8 (0x100) 0000000000000000...00000000000000015af1d78b58c40000
    9 (0x120) 0000000000000000...00000000000000000000000000000002 <=o
   10 (0x140) 0000000000000000...00000000000000001bc16d674ec80000
   11 (0x160) 0000000000000000...00000000000000001bc16d674ec80000 <-r

==================================================
  params.size: 2
    0: uint256 = 2000000000000000000
    1: uint256 = 2000000000000000000
 params.size: 1
   0: uint256[2] = [2000000000000000000, 2000000000000000000]
   internalType: uint256[]
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = [25000000000000000000, 25000000000000000000]
  2: uint256[] c = [2000000000000000000, 2000000000000000000]
params.size: 3
  0: uint256[] a = [6, 5]
  1: uint256[] b = [25000000000000000000, 25000000000000000000]
  2: uint256[] c = [2000000000000000000, 2000000000000000000]
==================================================

expected: [6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000] ?
result:   [6, 5], [25000000000000000000, 25000000000000000000], [2000000000000000000, 2000000000000000000] ? 1
testName: decoding uint256[], uint[], uint256[] three sets of two items each
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.071 test_71                          ==> 
line: decode|decoding bool[] one set of two|function baz(bool[])|0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001|[false, true]
testType: decode
testName: decoding bool[] one set of two
testSig: function baz(bool[]) --> baz(bool[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 1
  0: bool[] val_0 = <>
dataArray.size: 4
  0 (0x000) 0000000000000000...00000000000000000000000000000020 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000000
  3 (0x060) 0000000000000000...00000000000000000000000000000001

==================================================
 level: 2
 readOffset: 2
 objectStart: 1
 params.size: 1
   0: bool[2] = <>
   internalType: bool[]
 dataArray.size: 4
   0 (0x000) 0000000000000000...00000000000000000000000000000020
   1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
   2 (0x040) 0000000000000000...00000000000000000000000000000000 <-r
   3 (0x060) 0000000000000000...00000000000000000000000000000001

==================================================
  level: 3
  readOffset: 2
  objectStart: 1
  params.size: 2
    0: bool = <>
    1: bool = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
    2 (0x040) 0000000000000000...00000000000000000000000000000000 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000001

==================================================
  params.size: 2
    0: bool = false
    1: bool = <>
  level: 3
  readOffset: 3
  objectStart: 1
  params.size: 2
    0: bool = false
    1: bool = <>
  dataArray.size: 4
    0 (0x000) 0000000000000000...00000000000000000000000000000020
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <=o
    2 (0x040) 0000000000000000...00000000000000000000000000000000
    3 (0x060) 0000000000000000...00000000000000000000000000000001 <-r

==================================================
  params.size: 2
    0: bool = false
    1: bool = true
 params.size: 1
   0: bool[2] = [false, true]
   internalType: bool[]
params.size: 1
  0: bool[] val_0 = [false, true]
params.size: 1
  0: bool[] val_0 = [false, true]
==================================================

expected: [false, true] ?
result:   [false, true] ? 1
testName: decoding bool[] one set of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.072 test_72                          ==> 
line: decode|decoding bool[], address[] one set of two bools and one set of three addrs|function baz(bool[], address[])|0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413000000000000000000000000b9e7f8568e08d5659f5d29c4997173d84cdf2607000000000000000000000000bb9bc244d798123fde783fcc1c72d3bb8c189413|[false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]
testType: decode
testName: decoding bool[], address[] one set of two bools and one set of three addrs
testSig: function baz(bool[], address[]) --> baz(bool[],address[])

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: bool[] val_0 = <>
  1: address[] val_1 = <>
dataArray.size: 9
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o <-r
  1 (0x020) 0000000000000000...000000000000000000000000000000a0
  2 (0x040) 0000000000000000...00000000000000000000000000000002
  3 (0x060) 0000000000000000...00000000000000000000000000000000
  4 (0x080) 0000000000000000...00000000000000000000000000000001
  5 (0x0a0) 0000000000000000...00000000000000000000000000000003
  6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
  7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
  8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
 level: 2
 readOffset: 3
 objectStart: 2
 params.size: 1
   0: bool[2] = <>
   internalType: bool[]
 dataArray.size: 9
   0 (0x000) 0000000000000000...00000000000000000000000000000040
   1 (0x020) 0000000000000000...000000000000000000000000000000a0
   2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
   3 (0x060) 0000000000000000...00000000000000000000000000000000 <-r
   4 (0x080) 0000000000000000...00000000000000000000000000000001
   5 (0x0a0) 0000000000000000...00000000000000000000000000000003
   6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
   7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
   8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  level: 3
  readOffset: 3
  objectStart: 2
  params.size: 2
    0: bool = <>
    1: bool = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...000000000000000000000000000000a0
    2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
    3 (0x060) 0000000000000000...00000000000000000000000000000000 <-r
    4 (0x080) 0000000000000000...00000000000000000000000000000001
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003
    6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
    7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
    8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  params.size: 2
    0: bool = false
    1: bool = <>
  level: 3
  readOffset: 4
  objectStart: 2
  params.size: 2
    0: bool = false
    1: bool = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...000000000000000000000000000000a0
    2 (0x040) 0000000000000000...00000000000000000000000000000002 <=o
    3 (0x060) 0000000000000000...00000000000000000000000000000000
    4 (0x080) 0000000000000000...00000000000000000000000000000001 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003
    6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
    7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
    8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  params.size: 2
    0: bool = false
    1: bool = true
 params.size: 1
   0: bool[2] = [false, true]
   internalType: bool[]
params.size: 2
  0: bool[] val_0 = [false, true]
  1: address[] val_1 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 2
  0: bool[] val_0 = [false, true]
  1: address[] val_1 = <>
dataArray.size: 9
  0 (0x000) 0000000000000000...00000000000000000000000000000040 <=o
  1 (0x020) 0000000000000000...000000000000000000000000000000a0 <-r
  2 (0x040) 0000000000000000...00000000000000000000000000000002
  3 (0x060) 0000000000000000...00000000000000000000000000000000
  4 (0x080) 0000000000000000...00000000000000000000000000000001
  5 (0x0a0) 0000000000000000...00000000000000000000000000000003
  6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
  7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
  8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
 level: 2
 readOffset: 6
 objectStart: 5
 params.size: 1
   0: address[3] = <>
   internalType: address[]
 dataArray.size: 9
   0 (0x000) 0000000000000000...00000000000000000000000000000040
   1 (0x020) 0000000000000000...000000000000000000000000000000a0
   2 (0x040) 0000000000000000...00000000000000000000000000000002
   3 (0x060) 0000000000000000...00000000000000000000000000000000
   4 (0x080) 0000000000000000...00000000000000000000000000000001
   5 (0x0a0) 0000000000000000...00000000000000000000000000000003 <=o
   6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <-r
   7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
   8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  level: 3
  readOffset: 6
  objectStart: 5
  params.size: 3
    0: address = <>
    1: address = <>
    2: address = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...000000000000000000000000000000a0
    2 (0x040) 0000000000000000...00000000000000000000000000000002
    3 (0x060) 0000000000000000...00000000000000000000000000000000
    4 (0x080) 0000000000000000...00000000000000000000000000000001
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003 <=o
    6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <-r
    7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
    8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  params.size: 3
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = <>
    2: address = <>
  level: 3
  readOffset: 7
  objectStart: 5
  params.size: 3
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = <>
    2: address = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...000000000000000000000000000000a0
    2 (0x040) 0000000000000000...00000000000000000000000000000002
    3 (0x060) 0000000000000000...00000000000000000000000000000000
    4 (0x080) 0000000000000000...00000000000000000000000000000001
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003 <=o
    6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
    7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607 <-r
    8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413

==================================================
  params.size: 3
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
    2: address = <>
  level: 3
  readOffset: 8
  objectStart: 5
  params.size: 3
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
    2: address = <>
  dataArray.size: 9
    0 (0x000) 0000000000000000...00000000000000000000000000000040
    1 (0x020) 0000000000000000...000000000000000000000000000000a0
    2 (0x040) 0000000000000000...00000000000000000000000000000002
    3 (0x060) 0000000000000000...00000000000000000000000000000000
    4 (0x080) 0000000000000000...00000000000000000000000000000001
    5 (0x0a0) 0000000000000000...00000000000000000000000000000003 <=o
    6 (0x0c0) 0000000000000000...d798123fde783fcc1c72d3bb8c189413
    7 (0x0e0) 0000000000000000...8e08d5659f5d29c4997173d84cdf2607
    8 (0x100) 0000000000000000...d798123fde783fcc1c72d3bb8c189413 <-r

==================================================
  params.size: 3
    0: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
    1: address = 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607
    2: address = 0xbb9bc244d798123fde783fcc1c72d3bb8c189413
 params.size: 1
   0: address[3] = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]
   internalType: address[]
params.size: 2
  0: bool[] val_0 = [false, true]
  1: address[] val_1 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]
params.size: 2
  0: bool[] val_0 = [false, true]
  1: address[] val_1 = [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413]
==================================================

expected: [false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413] ?
result:   [false, true], [0xbb9bc244d798123fde783fcc1c72d3bb8c189413, 0xb9e7f8568e08d5659f5d29c4997173d84cdf2607, 0xbb9bc244d798123fde783fcc1c72d3bb8c189413] ? 1
testName: decoding bool[], address[] one set of two bools and one set of three addrs
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.073 test_73                          ==> 
line: decode|decoding address,address,uint256,string (see issue #1013)|function baz(address,address,uint256,string)|0x000000000000000000000000f3c9c5719eb4f26a3ab45cb86771827629f9a99900000000000000000000000071d402ac181de4a8739a15f5a56141f64fc522f80000000000000000000000000000000000000000000000190b89b838167800000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001f486920426f62202d2d20486572652061726520796f757220746f6b656e732100|0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens!
testType: decode
testName: decoding address,address,uint256,string (see issue #1013)
testSig: function baz(address,address,uint256,string) --> baz(address,address,uint256,string)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 4
  0: address val_0 = <>
  1: address val_1 = <>
  2: uint256 val_2 = <>
  3: string val_3 = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o <-r
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...0000000000000000000000000000001f
  5 (0x0a0) 486920426f62202d...726520796f757220746f6b656e732100

==================================================
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = <>
  2: uint256 val_2 = <>
  3: string val_3 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = <>
  2: uint256 val_2 = <>
  3: string val_3 = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8 <-r
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...0000000000000000000000000000001f
  5 (0x0a0) 486920426f62202d...726520796f757220746f6b656e732100

==================================================
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = <>
  3: string val_3 = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = <>
  3: string val_3 = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000 <-r
  3 (0x060) 0000000000000000...00000000000000000000000000000080
  4 (0x080) 0000000000000000...0000000000000000000000000000001f
  5 (0x0a0) 486920426f62202d...726520796f757220746f6b656e732100

==================================================
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = 462000000000000000000
  3: string val_3 = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = 462000000000000000000
  3: string val_3 = <>
dataArray.size: 6
  0 (0x000) 0000000000000000...9eb4f26a3ab45cb86771827629f9a999 <=o
  1 (0x020) 0000000000000000...181de4a8739a15f5a56141f64fc522f8
  2 (0x040) 0000000000000000...00000000000000190b89b83816780000
  3 (0x060) 0000000000000000...00000000000000000000000000000080 <-r
  4 (0x080) 0000000000000000...0000000000000000000000000000001f
  5 (0x0a0) 486920426f62202d...726520796f757220746f6b656e732100

==================================================
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = 462000000000000000000
  3: string val_3 = Hi Bob -- Here are your tokens!
params.size: 4
  0: address val_0 = 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999
  1: address val_1 = 0x71d402ac181de4a8739a15f5a56141f64fc522f8
  2: uint256 val_2 = 462000000000000000000
  3: string val_3 = Hi Bob -- Here are your tokens!
==================================================

expected: 0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens! ?
result:   0xf3c9c5719eb4f26a3ab45cb86771827629f9a999, 0x71d402ac181de4a8739a15f5a56141f64fc522f8, 462000000000000000000, Hi Bob -- Here are your tokens! ? 1
testName: decoding address,address,uint256,string (see issue #1013)
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.074 test_74                          ==> 
line: decode|decode uint8, uint32, uin64, uint128|function baz(uint8, uint32, uint64, uint128)|0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454
testType: decode
testName: decode uint8, uint32, uin64, uint128
testSig: function baz(uint8, uint32, uint64, uint128) --> baz(uint8,uint32,uint64,uint128)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 4
  0: uint8 val_0 = <>
  1: uint32 val_1 = <>
  2: uint64 val_2 = <>
  3: uint128 val_3 = <>
dataArray.size: 4
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = <>
  2: uint64 val_2 = <>
  3: uint128 val_3 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = <>
  2: uint64 val_2 = <>
  3: uint128 val_3 = <>
dataArray.size: 4
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = <>
  3: uint128 val_3 = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = <>
  3: uint128 val_3 = <>
dataArray.size: 4
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = 18446744073709551614
  3: uint128 val_3 = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = 18446744073709551614
  3: uint128 val_3 = <>
dataArray.size: 4
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r

==================================================
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = 18446744073709551614
  3: uint128 val_3 = 340282366920938463463374607431768211454
params.size: 4
  0: uint8 val_0 = 254
  1: uint32 val_1 = 4294967294
  2: uint64 val_2 = 18446744073709551614
  3: uint128 val_3 = 340282366920938463463374607431768211454
==================================================

expected: 254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454 ?
result:   254, 4294967294, 18446744073709551614, 340282366920938463463374607431768211454 ? 1
testName: decode uint8, uint32, uin64, uint128
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.075 test_75                          ==> 
line: decode|decode int8, int32, int64, int128, int256|function baz(int8, int32, int64, int128, int256)|0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe|-2, -2, -2, -2, -2
testType: decode
testName: decode int8, int32, int64, int128, int256
testSig: function baz(int8, int32, int64, int128, int256) --> baz(int8,int32,int64,int128,int256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 5
  0: int8 val_0 = <>
  1: int32 val_1 = <>
  2: int64 val_2 = <>
  3: int128 val_3 = <>
  4: int256 val_4 = <>
dataArray.size: 5
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o <-r
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  4 (0x080) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = <>
  2: int64 val_2 = <>
  3: int128 val_3 = <>
  4: int256 val_4 = <>

level: 1
readOffset: 1
objectStart: 0
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = <>
  2: int64 val_2 = <>
  3: int128 val_3 = <>
  4: int256 val_4 = <>
dataArray.size: 5
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  4 (0x080) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = <>
  3: int128 val_3 = <>
  4: int256 val_4 = <>

level: 1
readOffset: 2
objectStart: 0
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = <>
  3: int128 val_3 = <>
  4: int256 val_4 = <>
dataArray.size: 5
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  4 (0x080) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = <>
  4: int256 val_4 = <>

level: 1
readOffset: 3
objectStart: 0
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = <>
  4: int256 val_4 = <>
dataArray.size: 5
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r
  4 (0x080) ffffffffffffffff...fffffffffffffffffffffffffffffffe

==================================================
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = -2
  4: int256 val_4 = <>

level: 1
readOffset: 4
objectStart: 0
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = -2
  4: int256 val_4 = <>
dataArray.size: 5
  0 (0x000) ffffffffffffffff...fffffffffffffffffffffffffffffffe <=o
  1 (0x020) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  2 (0x040) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  3 (0x060) ffffffffffffffff...fffffffffffffffffffffffffffffffe
  4 (0x080) ffffffffffffffff...fffffffffffffffffffffffffffffffe <-r

==================================================
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = -2
  4: int256 val_4 = -2
params.size: 5
  0: int8 val_0 = -2
  1: int32 val_1 = -2
  2: int64 val_2 = -2
  3: int128 val_3 = -2
  4: int256 val_4 = -2
==================================================

expected: -2, -2, -2, -2, -2 ?
result:   -2, -2, -2, -2, -2 ? 1
testName: decode int8, int32, int64, int128, int256
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.076 test_76                          ==> 
line: decode|decode uint128[2][3], uint three sets of two|function baz(uint128[2][3], uint)|0x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a|[[1, 2], [3, 4], [5, 6]], 10
testType: decode
testName: decode uint128[2][3], uint three sets of two
testSig: function baz(uint128[2][3], uint) --> baz(uint128[2][3],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint128[2][3] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 3
   0: uint128[2] = <>
   1: uint128[2] = <>
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 0
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 1
    1: uint128 = <>
  level: 3
  readOffset: 1
  objectStart: 0
  params.size: 2
    0: uint128 = 1
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 1
    1: uint128 = 2
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = <>
   2: uint128[2] = <>
 level: 2
 readOffset: 2
 objectStart: 0
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = <>
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 2
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 3
    1: uint128 = <>
  level: 3
  readOffset: 3
  objectStart: 0
  params.size: 2
    0: uint128 = 3
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004 <-r
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 3
    1: uint128 = 4
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = <>
 level: 2
 readOffset: 4
 objectStart: 0
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = <>
 dataArray.size: 7
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 4
  objectStart: 0
  params.size: 2
    0: uint128 = <>
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 5
    1: uint128 = <>
  level: 3
  readOffset: 5
  objectStart: 0
  params.size: 2
    0: uint128 = 5
    1: uint128 = <>
  dataArray.size: 7
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006 <-r
    6 (0x0c0) 0000000000000000...0000000000000000000000000000000a

==================================================
  params.size: 2
    0: uint128 = 5
    1: uint128 = 6
 params.size: 3
   0: uint128[2] = [1, 2]
   1: uint128[2] = [3, 4]
   2: uint128[2] = [5, 6]
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>

level: 1
readOffset: 6
objectStart: 0
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = <>
dataArray.size: 7
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...0000000000000000000000000000000a <-r

==================================================
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint128[2][3] val_0 = [[1, 2], [3, 4], [5, 6]]
  1: uint256 val_1 = 10
==================================================

expected: [[1, 2], [3, 4], [5, 6]], 10 ?
result:   [[1, 2], [3, 4], [5, 6]], 10 ? 1
testName: decode uint128[2][3], uint three sets of two
passed 'func.doTest(line)' is true
--------------------------------------------------------------------------------
	000.077 test_77                          ==> 
line: decode|decode uint128[2][3][2], uint two sets of three sets of two|function baz(uint128[2][3][2], uint)|0xa|[[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10
testType: decode
testName: decode uint128[2][3][2], uint two sets of three sets of two
testSig: function baz(uint128[2][3][2], uint) --> baz(uint128[2][3][2],uint256)

--------------------------------------------------

level: 1
readOffset: 0
objectStart: 0
params.size: 2
  0: uint128[2][3][2] val_0 = <>
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...00000000000000000000000000000001
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000005
 11 (0x160) 0000000000000000...00000000000000000000000000000006
 12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
 level: 2
 readOffset: 0
 objectStart: 0
 params.size: 2
   0: uint128[2][3] = <>
   1: uint128[2][3] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...00000000000000000000000000000001
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000005
  11 (0x160) 0000000000000000...00000000000000000000000000000006
  12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 0
  objectStart: 0
  params.size: 3
    0: uint128[2] = <>
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 0
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o <-r
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   level: 4
   readOffset: 1
   objectStart: 0
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002 <-r
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = 2
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  level: 3
  readOffset: 2
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 2
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003 <-r
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   level: 4
   readOffset: 3
   objectStart: 0
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004 <-r
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = 4
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  level: 3
  readOffset: 4
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 4
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005 <-r
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   level: 4
   readOffset: 5
   objectStart: 0
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006 <-r
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = 6
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = [5, 6]
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = <>
 level: 2
 readOffset: 6
 objectStart: 0
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = <>
 dataArray.size: 13
   0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
   1 (0x020) 0000000000000000...00000000000000000000000000000002
   2 (0x040) 0000000000000000...00000000000000000000000000000003
   3 (0x060) 0000000000000000...00000000000000000000000000000004
   4 (0x080) 0000000000000000...00000000000000000000000000000005
   5 (0x0a0) 0000000000000000...00000000000000000000000000000006
   6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
   7 (0x0e0) 0000000000000000...00000000000000000000000000000002
   8 (0x100) 0000000000000000...00000000000000000000000000000003
   9 (0x120) 0000000000000000...00000000000000000000000000000004
  10 (0x140) 0000000000000000...00000000000000000000000000000005
  11 (0x160) 0000000000000000...00000000000000000000000000000006
  12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
  level: 3
  readOffset: 6
  objectStart: 0
  params.size: 3
    0: uint128[2] = <>
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 6
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001 <-r
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   level: 4
   readOffset: 7
   objectStart: 0
   params.size: 2
     0: uint128 = 1
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002 <-r
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 1
     1: uint128 = 2
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  level: 3
  readOffset: 8
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = <>
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 8
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003 <-r
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   level: 4
   readOffset: 9
   objectStart: 0
   params.size: 2
     0: uint128 = 3
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004 <-r
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 3
     1: uint128 = 4
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  level: 3
  readOffset: 10
  objectStart: 0
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = <>
  dataArray.size: 13
    0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
    1 (0x020) 0000000000000000...00000000000000000000000000000002
    2 (0x040) 0000000000000000...00000000000000000000000000000003
    3 (0x060) 0000000000000000...00000000000000000000000000000004
    4 (0x080) 0000000000000000...00000000000000000000000000000005
    5 (0x0a0) 0000000000000000...00000000000000000000000000000006
    6 (0x0c0) 0000000000000000...00000000000000000000000000000001
    7 (0x0e0) 0000000000000000...00000000000000000000000000000002
    8 (0x100) 0000000000000000...00000000000000000000000000000003
    9 (0x120) 0000000000000000...00000000000000000000000000000004
   10 (0x140) 0000000000000000...00000000000000000000000000000005 <-r
   11 (0x160) 0000000000000000...00000000000000000000000000000006
   12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   level: 4
   readOffset: 10
   objectStart: 0
   params.size: 2
     0: uint128 = <>
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005 <-r
    11 (0x160) 0000000000000000...00000000000000000000000000000006
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   level: 4
   readOffset: 11
   objectStart: 0
   params.size: 2
     0: uint128 = 5
     1: uint128 = <>
   dataArray.size: 13
     0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
     1 (0x020) 0000000000000000...00000000000000000000000000000002
     2 (0x040) 0000000000000000...00000000000000000000000000000003
     3 (0x060) 0000000000000000...00000000000000000000000000000004
     4 (0x080) 0000000000000000...00000000000000000000000000000005
     5 (0x0a0) 0000000000000000...00000000000000000000000000000006
     6 (0x0c0) 0000000000000000...00000000000000000000000000000001
     7 (0x0e0) 0000000000000000...00000000000000000000000000000002
     8 (0x100) 0000000000000000...00000000000000000000000000000003
     9 (0x120) 0000000000000000...00000000000000000000000000000004
    10 (0x140) 0000000000000000...00000000000000000000000000000005
    11 (0x160) 0000000000000000...00000000000000000000000000000006 <-r
    12 (0x180) 0000000000000000...0000000000000000000000000000000a

==================================================
   params.size: 2
     0: uint128 = 5
     1: uint128 = 6
  params.size: 3
    0: uint128[2] = [1, 2]
    1: uint128[2] = [3, 4]
    2: uint128[2] = [5, 6]
 params.size: 2
   0: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
   1: uint128[2][3] = [[1, 2], [3, 4], [5, 6]]
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = <>

level: 1
readOffset: 12
objectStart: 0
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = <>
dataArray.size: 13
  0 (0x000) 0000000000000000...00000000000000000000000000000001 <=o
  1 (0x020) 0000000000000000...00000000000000000000000000000002
  2 (0x040) 0000000000000000...00000000000000000000000000000003
  3 (0x060) 0000000000000000...00000000000000000000000000000004
  4 (0x080) 0000000000000000...00000000000000000000000000000005
  5 (0x0a0) 0000000000000000...00000000000000000000000000000006
  6 (0x0c0) 0000000000000000...00000000000000000000000000000001
  7 (0x0e0) 0000000000000000...00000000000000000000000000000002
  8 (0x100) 0000000000000000...00000000000000000000000000000003
  9 (0x120) 0000000000000000...00000000000000000000000000000004
 10 (0x140) 0000000000000000...00000000000000000000000000000005
 11 (0x160) 0000000000000000...00000000000000000000000000000006
 12 (0x180) 0000000000000000...0000000000000000000000000000000a <-r

==================================================
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = 10
params.size: 2
  0: uint128[2][3][2] val_0 = [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]]
  1: uint256 val_1 = 10
==================================================

expected: [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10 ?
result:   [[[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]]], 10 ? 1
testName: decode uint128[2][3][2], uint two sets of three sets of two
passed 'func.doTest(line)' is true
...passed

Done...
