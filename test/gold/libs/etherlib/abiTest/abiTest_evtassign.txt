abiTest  evt_assign
event assignment test...
CEthStateArray				a->_val = "0x" + extract(data, 0*64, 64);
CBlkNumArray				a->_val = "0x" + extract(data, 0*64, 64);
CFunctionArray				a->_val = "0x" + extract(data, 0*64, 64);
CReconciliation				a->_val = "0x" + extract(data, 0*64, 64);
CLogEntryArray				a->_val = "0x" + extract(data, 0*64, 64);
CParameterArray				a->_val = "0x" + extract(data, 0*64, 64);
CPerson				a->_val = "0x" + extract(data, 0*64, 64);
CReceipt				a->_val = "0x" + extract(data, 0*64, 64);
CNewReceipt				a->_val = "0x" + extract(data, 0*64, 64);
CNewTransactionArray				a->_val = "0x" + extract(data, 0*64, 64);
CBigUintArray				a->_val = str_2_Int("0x" + extract(data, 0*64, 64));
CTopicArray				a->_val = "0x" + extract(data, 0*64, 64);
CAddressArray				a->_val = "0x" + extract(data, 0*64, 64);
bytes4				a->_val = "0x" + extract(data, 0*64, 64);
time				a->_val = "0x" + extract(data, 0*64, 64);
uint8				a->_val = (uint32_t)str_2_Uint("0x" + extract(data, 0*64, 64));
CStringArray				a->_val = "0x" + extract(data, 0*64, 64);
CTraceAction				a->_val = "0x" + extract(data, 0*64, 64);
CTraceResult				a->_val = "0x" + extract(data, 0*64, 64);
CTransactionArray				a->_val = "0x" + extract(data, 0*64, 64);
CTreeNode				a->_val = "0x" + extract(data, 0*64, 64);
CTopicArray				a->_val = "0x" + extract(data, 0*64, 64);
address				a->_val = str_2_Addr(extract(data, 0*64, 64));
blknum				a->_val = "0x" + extract(data, 0*64, 64);
bool				a->_val = str_2_Int("0x" + extract(data, 0*64, 64));
bytes				a->_val = "0x" + extract(data, 0*64);
bytes32				a->_val = "0x" + extract(data, 0*64, 64);
double				a->_val = "0x" + extract(data, 0*64, 64);
gas				a->_val = str_2_Gas("0x" + extract(data, 0*64, 64));
hash				a->_val = "0x" + extract(data, 0*64, 64);
int256				a->_val = str_2_Int("0x" + extract(data, 0*64, 64));
int64				a->_val = str_2_Int("0x" + extract(data, 0*64, 64));
string				a->_val = "0x" + extract(data, 0*64, 64);
timestamp				a->_val = "0x" + extract(data, 0*64, 64);
uint256				a->_val = str_2_Wei("0x" + extract(data, 0*64, 64));
uint32				a->_val = (uint32_t)str_2_Uint("0x" + extract(data, 0*64, 64));
uint64				a->_val = str_2_Uint("0x" + extract(data, 0*64, 64));
wei				a->_val = "0x" + extract(data, 0*64, 64);
...passed

Done...
