[settings]
class = CReconciliation
fields = \
    blknum blockNumber|\
    blknum transactionIndex|\
    timestamp timestamp|\
    address assetAddr|\
    string assetSymbol|\
    uint64 decimals=18|\
    blknum prevBlk|\
    int256 prevBlkBal|\
    int256 begBal|\
    int256 endBal|\
    int256 amountIn|\
    int256 internalIn|\
    int256 selfDestructIn|\
    int256 minerBaseRewardIn|\
    int256 minerNephewRewardIn|\
    int256 minerTxFeeIn|\
    int256 minerUncleRewardIn|\
    int256 prefundIn|\
    int256 amountOut|\
    int256 internalOut|\
    int256 selfDestructOut|\
    int256 gasCostOut|\
    string reconciliationType|\
    double spotPrice=1.0|\
    string priceSource
includes = utillib.h
cpp_includes = etherlib.h
serializable = true
equals = ((blockNumber == it.blockNumber) && (assetAddr == it.assetAddr))
display_str = assetAddr,assetSymbol,decimals,blockNumber,transactionIndex,timestamp,prevBlk,prevBlkBal,begBal,amountIn,internalIn,selfDestructIn,minerBaseRewardIn,minerNephewRewardIn,minerTxFeeIn,minerUncleRewardIn,prefundIn,totalIn,amountOut,internalOut,selfDestructOut,gasCostOut,totalOut,totalOutLessGas,amountNet,endBal,begBalDiff,endBalCalc,endBalDiff,reconciled,spotPrice,priceSource,reconciliationType
tsx = true

#    reconciliation:
#      type: object
#      properties:
#        blockNumber:
#          type: number
#          format: blknum_t
#          example: 10021
#          description: the number of the block
#        transactionIndex:
#          type: number
#          format: txnum_t
#          example: 305
#          description: "the zero-indexed position of the transaction in the block"
#        timestamp:
#          type: number
#          format: timestamp_t
#          example: 1438335038
#          description: "the unix timestamp of the object"
#        assetAddr:
#          type: string
#          format: address_t
#          example: "0xf503017d7baf7fbc0fff7492b751025c6a78179b"
#          description: for reconciliations whose assetSymbol is ETH or WEI, the accountedFor address. For all assets, the address of the asset itself
#        assetSymbol:
#          description: either ETH, WEI or the symbol of the asset being reconciled as extracted from the chain
#          type: string
#        decimals:
#          description: Equivilent to the extracted value of getSymbol from ERC20 or, if ETH or WEI then 18
#          type: number
#        prevBlk:
#          type: number
#          format: blknum_t
#          example: 10021
#          description: the block number of the previous reconciliation
#        prevBlkBal:
#          description: the account balance for the given asset for the previous reconciliation
#        begBal:
#          description: the begining balance of the asset at the blockNumber
#          type: number
#          format: bigint
#        begBalDiff:
#          description: the difference between the expected beginning balance (prevBlkBal) and the queried balance from the chain
#          type: number
#          format: bigint
#        amountIn:
#          description: for ETH reconciliations, the value of the transactions if the from address is the same as the accountedFor address. Otherwise, the value of the ERC20’s transfer amount.
#          type: number
#          format: bigint
#        amountOut:
#          description: the amount (in terms of the asset) of regular outflow during this bigint
#        internalIn:
#          description: for ETH reconciliations only, the value of any internal value transfers into the accountedFor account
#          type: number
#          format: bigint
#        internalOut:
#          description: for ETH reconciliations only, the value of any internal value transfers out of the accountedFor account
#          type: number
#          format: bigint
#        selfDestructIn:
#          description: for ETH reconciliations for transactions ending in self-destrution only, the value received by the accountedFor account from the self-destructed account bigint
#        selfDestructOut:
#          description: for ETH reconciliations for transactions ending in self-destrution only, the value transfered out of the accountedFor account
#          type: number
#          format: bigint
#        minerBaseRewardIn:
#          description: for blocks won by the accountedFor address, this is the base fee reward for the miner
#          type: number
#          format: bigint
#        minerNephewRewardIn:
#          description: for blocks won by the accountedFor address, this is the netphew reward for the miner
#          type: number
#          format: bigint
#        minerTxFeeIn:
#          description: for blocks won by the accountedFor address, this is the transaction fee reward for the miner
#          type: number
#          format: bigint
#        minerUncleRewardIn:
#          description: for blocks in which the accountedFor address generated an uncle, this value is the uncle reward
#          type: number
#          format: bigint
#        prefundIn:
#          description: at block zero (0) only, the amount of genesis income for the accountedFor address
#          type: number
#          format: bigint
#        gasCostOut:
#          description: if accountedFor address is the transaction’s sender (i.e. from at the top level), the amount of gas expended denominated in either ETH or WEI.
#          type: number
#          format: bigint
#        endBal:
#          description: the balance of the reconciled asset at the end of this transaction found by querying the chain (see the note above about intra-block reconciliations)
#          type: number
#          format: bigint
#        totalIn:
#          description: a calculated field -- the sum of all In fields
#          type: number
#          format: bigint
#        totalOut:
#          description: a calculated field -- the sum of all Out fields
#          type: number
#          format: bigint
#        amountNet:
#          description: a calculated field -- totalIn - totalOut
#          type: number
#          format: bigint
#        endBalCalc:
#          description: a calculated field -- begBal + amountNet
#          type: number
#          format: bigint
#        endBalDiff:
#          description: a calculated field -- endBal - endBalCalc, if non-zero, the reconciliation failed
#          type: number
#          format: bigint
#        reconciled:
#          description: a calculated field -- true if `endBal === endBalCalc` and `begBal === prevBlkBal`. `false` otherwise.
#          type: boolean
#        reconciliationType:
#          description: One of regular, traces, prevdiff-partial, partial-nextdiff, or `partial-partial depending on previous, following or both transactions in the same block 	string
#        spotPrice:
#          description: The price (if available) at the time of the transaction in US dollars for ETH reconciliations and ETH for other assets
#          type: number
#          format: bigint
