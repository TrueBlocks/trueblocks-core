name               , type     , strDefault, attributes    , docOrder, description
blockNumber        , blknum   ,           ,               ,        1, the number of the block
transactionIndex   , txnum    ,           ,               ,        2, the zero-indexed position of the transaction in the block
logIndex           , lognum   ,           ,               ,        3, the zero-indexed position the log in the block&#44; if applicable
transactionHash    , hash     ,           ,               ,        4, the hash of the transaction that triggered this reconciliation
timestamp          , timestamp,           ,               ,        5, the Unix timestamp of the object
date               , datetime ,           , calc          ,        6, the timestamp as a date
asset              , address  ,           ,               ,        7, 0xeeee...eeee for ETH reconciliations&#44; the token address otherwise
symbol             , string   ,           ,               ,        8, either ETH&#44; WEI&#44; or the symbol of the asset being reconciled as extracted from the chain
decimals           , value    ,       18  ,               ,        9, the value of `decimals` from an ERC20 contract or&#44; if ETH or WEI&#44; then 18
spotPrice          , float    ,        1.0,               ,       10, the on-chain price in USD (or if a token in ETH&#44; or zero) at the time of the transaction
priceSource        , string   ,           ,               ,       11, the on-chain source from which the spot price was taken
accountedFor       , address  ,           ,               ,       12, the address being accounted for in this reconciliation
sender             , address  ,           ,               ,       13, the initiator of the transfer (the sender)
recipient          , address  ,           ,               ,       14, the receiver of the transfer (the recipient)
begBal             , int256   ,           ,               ,       15, the on-chain or running beginning balance prior to the transaction (see notes about intra-block reconciliations)
amountNet          , int256   ,           , calc          ,       16, totalIn - totalOut
endBal             , int256   ,           ,               ,       17, the on-chain or running balance after the transaction (see notes about intra-block reconciliations)
reconciled         , bool     ,           , calc          ,       18, true if `endBal === endBalCalc` and `begBal === prevBal`. `false` otherwise.
totalIn            , int256   ,           , calc          ,       19, the sum of the following `In` fields
amountIn           , int256   ,           , omitempty     ,       20, the top-level value of the incoming transfer for the accountedFor address
internalIn         , int256   ,           , omitempty     ,       21, the internal value of the incoming transfer for the accountedFor address
selfDestructIn     , int256   ,           , omitempty     ,       22, the incoming value of a self-destruct if recipient is the accountedFor address
minerBaseRewardIn  , int256   ,           , omitempty     ,       23, the base fee reward if the miner is the accountedFor address
minerNephewRewardIn, int256   ,           , omitempty     ,       24, the nephew reward if the miner is the accountedFor address
minerTxFeeIn       , int256   ,           , omitempty     ,       25, the transaction fee reward if the miner is the accountedFor address
minerUncleRewardIn , int256   ,           , omitempty     ,       26, the uncle reward if the miner who won the uncle block is the accountedFor address
correctBegBalIn    , int256   ,           , omitempty     ,       27, for unreconciled transfers&#44; increase in beginning balance need to match previous balance
correctAmountIn    , int256   ,           , omitempty     ,       28, for unreconciled transfers&#44; increase in the amount of a transfer
correctEndBalIn    , int256   ,           , omitempty     ,       29, for unreconciled transfers&#44; increase in ending balance need to match running balance or block balance
prefundIn          , int256   ,           , omitempty     ,       30, at block zero (0) only&#44; the amount of genesis income for the accountedFor address
totalOut           , int256   ,           , calc          ,       31, the sum of the following `Out` fields
amountOut          , int256   ,           , omitempty     ,       32, the amount (in units of the asset) of regular outflow during this transaction
internalOut        , int256   ,           , omitempty     ,       33, the value of any internal value transfers out of the accountedFor account
correctBegBalOut   , int256   ,           , omitempty     ,       34, for unreconciled transfers&#44; decrease in beginning balance need to match previous balance
correctAmountOut   , int256   ,           , omitempty     ,       35, for unreconciled transfers&#44; decrease in the amount of a transfer
correctEndBalOut   , int256   ,           , omitempty     ,       36, for unreconciled transfers&#44; decrease in ending balance need to match running balance or block balance
selfDestructOut    , int256   ,           , omitempty     ,       37, the value of the self-destructed value out if the accountedFor address was self-destructed
gasOut             , int256   ,           , omitempty     ,       38, if the transaction's original sender is the accountedFor address&#44; the amount of gas expended
prevBal            , int256   ,           , omitempty     ,       39, the account balance for the given asset for the previous reconciliation
begBalDiff         , int256   ,           , omitempty|calc,       40, difference between expected beginning balance and balance at last reconciliation&#44; if non-zero&#44; the reconciliation failed
endBalDiff         , int256   ,           , omitempty|calc,       41, endBal - endBalCalc&#44; if non-zero&#44; the reconciliation failed
endBalCalc         , int256   ,           , omitempty|calc,       42, begBal + amountNet
correctingReasons  , []string ,           , omitempty     ,       43, for unreconciled transfers&#44; the reasons for the correcting entries&#44; if any
