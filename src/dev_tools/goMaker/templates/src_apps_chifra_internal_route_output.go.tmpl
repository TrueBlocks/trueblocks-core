// Copyright 2016, 2024 The TrueBlocks Authors. All rights reserved.
// Use of this source code is governed by a license that can
// be found in the LICENSE file.
/*
 * Parts of this file were auto generated. Edit only those parts of
 * the code inside of 'EXISTING_CODE' tags.
 */

package {{.Route}}Pkg

// EXISTING_CODE
// EXISTING_CODE

// Run{{toProper .Route}} handles the {{.Route}} command for the command line. Returns error only as per cobra.
func Run{{toProper .Route}}(cmd *cobra.Command, args []string) error {
	opts := {{toLower .Route}}FinishParse(args)
	// EXISTING_CODE
	// EXISTING_CODE
	outputHelpers.SetWriterForCommand("{{.Route}}", &opts.Globals)
	return opts.{{toProper .Route}}Internal()
}

// Serve{{toProper .Route}} handles the {{.Route}} command for the API. Returns an error.
func Serve{{toProper .Route}}(w http.ResponseWriter, r *http.Request) error {
	opts := {{toLower .Route}}FinishParseApi(w, r)
	// EXISTING_CODE
	// EXISTING_CODE
	outputHelpers.InitJsonWriterApi("{{.Route}}", w, &opts.Globals)
	err := opts.{{toProper .Route}}Internal()
	outputHelpers.CloseJsonWriterIfNeededApi("{{.Route}}", err, &opts.Globals)
	return err
}

// {{toProper .Route}}Internal handles the internal workings of the {{.Route}} command. Returns an error.
func (opts *{{toProper .Route}}Options) {{toProper .Route}}Internal() error {
	var err error
	if err = opts.validate{{toProper .Route}}(); err != nil {
		return err
	}

	timer := logger.NewTimer()
	msg := "chifra {{.Route}}"
	// EXISTING_CODE
	// EXISTING_CODE
	timer.Report(msg)

	return err
}

// Get{{toProper .Route}}Options returns the options for this tool so other tools may use it.
func Get{{toProper .Route}}Options(args []string, g *globals.GlobalOptions) *{{toProper .Route}}Options {
	ret := {{.Route}}FinishParse(args)
	if g != nil {
		ret.Globals = *g
	}
	return ret
}

// EXISTING_CODE
// EXISTING_CODE
