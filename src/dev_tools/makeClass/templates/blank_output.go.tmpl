// Copyright 2021 The TrueBlocks Authors. All rights reserved.
// Use of this source code is governed by a license that can
// be found in the LICENSE file.
/*
 * Parts of this file were generated with makeClass --run. Edit only those parts of
 * the code inside of 'EXISTING_CODE' tags.
 */

package [{API_ROUTE}]Pkg

// EXISTING_CODE
// EXISTING_CODE

// Run[{PROPER}] handles the [{ROUTE}] command for the command line. Returns error only as per cobra.
func Run[{PROPER}](cmd *cobra.Command, args []string) error {
	opts := [{LOWER}]FinishParse(args)
	outputHelpers.EnableCommand("[{ROUTE}]", true)
	// EXISTING_CODE
	// EXISTING_CODE
	outputHelpers.SetWriterForCommand("[{ROUTE}]", &opts.Globals)
	return opts.[{PROPER}]Internal()
}

// Serve[{PROPER}] handles the [{ROUTE}] command for the API. Returns an error.
func Serve[{PROPER}](w http.ResponseWriter, r *http.Request) error {
	opts := [{LOWER}]FinishParseApi(w, r)
	outputHelpers.EnableCommand("[{ROUTE}]", true)
	// EXISTING_CODE
	// EXISTING_CODE
	outputHelpers.InitJsonWriterApi("[{ROUTE}]", w, &opts.Globals)
	err := opts.[{PROPER}]Internal()
	outputHelpers.CloseJsonWriterIfNeededApi("[{ROUTE}]", err, &opts.Globals)
	return err
}

// [{PROPER}]Internal handles the internal workings of the [{ROUTE}] command.  Returns an error.
func (opts *[{PROPER}]Options) [{PROPER}]Internal() error {
	var err error
	if err = opts.validate[{PROPER}](); err != nil {
		return err
	}

	timer := logger.NewTimer()
	msg := "chifra [{ROUTE}]"
	// EXISTING_CODE
	// EXISTING_CODE
	timer.Report(msg)

	return err
}

// Get[{PROPER}]Options returns the options for this tool so other tools may use it.
func Get[{PROPER}]Options(args []string, g *globals.GlobalOptions) *[{PROPER}]Options {
	ret := [{ROUTE}]FinishParse(args)
	if g != nil {
		ret.Globals = *g
	}
	return ret
}

// EXISTING_CODE
// EXISTING_CODE
