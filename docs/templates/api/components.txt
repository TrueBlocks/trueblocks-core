components:
  schemas:
    monitor:
      description: "A local file indicating a user's interest in an address. Includes caches for reconicilations, transactions and appearances as well as an optional association to named account"
      type: object
      properties:
        nApps:
          type: number
          format: blknum
          description: "the number of appearances for this monitor"
        firstApp:
          type: number
          format: blknum
          description: "the first block at which this address appears"
        latestApp:
          type: number
          format: blknum
          description: "the latest block at which this address appears"
        sizeInBytes:
          type: number
          format: uint64
          description: "the size of this monitor on disc"
        tags:
          type: string
          description: "the tag given to this address"
        address:
          type: string
          format: address
          description: "the address being monitored"
        is_custom:
          type: boolean
          description: "`true` if this address is customized"
    appearance:
      description: "a single appearance of an address anywhere in the chain in the form of blockNumber.transactionIndex"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        address:
          type: string
          format: address
          description: "the address of the appearance"
        name:
          type: string
          description: "the name of the address, if found"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp for this appearance"
        date:
          type: string
          description: "the date represented by the timestamp"
    reconciliation:
      description: "a reconiciliation of all inflows and outflows to a given account at a given transaction"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        assetAddr:
          type: string
          format: address
          example: "0xf503...179b"
          description: "the accountedFor address for ETH recons, the token address itself otherwise"
        assetSymbol:
          type: string
          description: "either ETH, WEI or the symbol of the asset being reconciled as extracted from the chain"
        decimals:
          type: number
          format: uint64
          description: "Equivalent to the extracted value of getSymbol from ERC20 or, if ETH or WEI then 18"
        prevBlk:
          type: number
          format: blknum
          example: 10021
          description: "the block number of the previous reconciliation"
        prevBlkBal:
          type: string
          format: int256
          description: "the account balance for the given asset for the previous reconciliation"
        begBal:
          type: string
          format: int256
          description: "the beginning balance of the asset at the blockNumber"
        begBalDiff:
          type: string
          format: int256
          description: "the difference between the expected beginning balance (prevBlkBal) and the queried balance from the chain"
        amountIn:
          type: string
          format: int256
          description: "the top-level value of the incoming transfer for the accountedFor address"
        amountOut:
          type: string
          format: int256
          description: "the amount (in terms of the asset) of regular outflow during this bigint"
        internalIn:
          type: string
          format: int256
          description: "the internal value of the incoming transfer for the accountedFor address"
        internalOut:
          type: string
          format: int256
          description: "the value of any internal value transfers out of the accountedFor account"
        selfDestructIn:
          type: string
          format: int256
          description: "the incoming value of a self-destruct if recipient is the accountedFor address"
        selfDestructOut:
          type: string
          format: int256
          description: "the value of the self-destructed value out if the accountedFor address was self-destructed"
        minerBaseRewardIn:
          type: string
          format: int256
          description: "the base fee reward if the miner is the accountedFor address"
        minerNephewRewardIn:
          type: string
          format: int256
          description: "the nephew reward if the miner is the accountedFor address"
        minerTxFeeIn:
          type: string
          format: int256
          description: "the transaction fee reward if the miner is the accountedFor address"
        minerUncleRewardIn:
          type: string
          format: int256
          description: "the uncle reward if the miner who won the uncle block is the accountedFor address"
        prefundIn:
          type: string
          format: int256
          description: "at block zero (0) only, the amount of genesis income for the accountedFor address"
        spotPrice:
          type: number
          format: double
          description: "The on-chain price in USD (or if a token in ETH, or zero) at the time of the transaction"
        priceSource:
          type: string
          description: "The on-chain source from which the spot price was taken"
        gasCostOut:
          type: string
          format: int256
          description: "if the transactions original sender is the accountedFor address, the amount of gas expended denominated in WEI."
        endBal:
          type: string
          format: int256
          description: "the on-chain balance of the asset (see notes above about intra-block reconciliations)"
        totalIn:
          type: string
          format: int256
          description: "a calculated field -- the sum of all In fields"
        totalOut:
          type: string
          format: int256
          description: "a calculated field -- the sum of all Out fields"
        totalOutLessGas:
          type: string
          format: int256
        amountNet:
          type: string
          format: int256
          description: "a calculated field -- totalIn - totalOut"
        endBalCalc:
          type: string
          format: int256
          description: "a calculated field -- begBal + amountNet"
        reconciliationType:
          type: string
          description: "One of regular, traces, prevdiff-partial, partial-nextdiff, or `partial-partial`"
        endBalDiff:
          type: string
          format: int256
          description: "a calculated field -- endBal - endBalCalc, if non-zero, the reconciliation failed"
        reconciled:
          type: boolean
          description: "a calculated field -- true if `endBal === endBalCalc` and `begBal === prevBlkBal`. `false` otherwise."
    name:
      description: "an association between a name and address for use throughout TrueBlocks"
      type: object
      properties:
        tags:
          type: string
          example: "31-Gitcoin:Core"
          description: "colon separated list of tags"
        address:
          type: string
          format: address
          example: "0xabea...fbef"
          description: "the address associated with this name"
        name:
          type: string
          example: "zkSync"
          description: "the name associated with this address (retrieved from on-chain data if available)"
        symbol:
          type: string
          example: "GTC"
          description: "the symbol for this address (retrieved from on-chain data if available)"
        source:
          type: string
          example: "On-chain"
          description: "user supplied source of where this name was found (or on-chain if name is on-chain)"
        decimals:
          type: number
          format: uint64
          example: 18
          description: "number of decimals retrieved from an ERC20 smart contract, defaults to 18"
        description:
          type: string
          example: "any test"
          description: "user supplied description for the address"
        deleted:
          type: boolean
          description: "`true` if deleted, `false` otherwise"
        is_custom:
          type: boolean
          description: "`true` if the address is a custom address, `false` otherwise"
        is_prefund:
          type: boolean
          description: "`true` if the address was one of the prefund addresses, `false` otherwise"
        is_contract:
          type: boolean
          description: "`true` if the address is a smart contract, `false` otherwise"
        is_erc20:
          type: boolean
          description: "`true` if the address is an ERC20, `false` otherwise"
        is_erc721:
          type: boolean
          description: "`true` if the address is an ERC720, `false` otherwise"
    abi:
      description: "a collection of function and event definitions as described elsewhere in the Ethereum system"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the smart contract that implements this abi"
        interfaces:
          type: array
          items:
            $ref: "#/components/schemas/function"
          description: "the list of events and functions on this abi"
    block:
      description: "block data directly from the blockchain"
      type: object
      properties:
        gasLimit:
          type: string
          format: gas
          example: "5000"
          description: "the system-wide maximum amount of gas permitted in this block"
        hash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "the hash of the current block"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        parentHash:
          type: string
          format: hash
          example: "0x66fc...31c9"
          description: "hash of previous block"
        miner:
          type: string
          format: address
          example: "0xf927...2b13"
          description: "Address of block's winning miner"
        difficulty:
          type: number
          format: uint64
          example: 598133194256
          description: "the computational difficulty at this block"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/transaction"
          description: "a possibly empty array of transactions or transaction hashes"
        baseFeePerGas:
          type: string
          format: wei
          example: "120911"
          description: "the base fee for this block"
        finalized:
          type: boolean
          example: true
          description: "flag indicating the system considers this data final"
    transaction:
      description: "the transaction data for a given transaction directly from the blockchain"
      type: object
      properties:
        hash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "The hash of the transaction"
        gasPrice:
          type: string
          format: gas
          example: "63525836552"
          description: "the number of wei per unit of gas the sender is willing to spend"
        blockHash:
          type: string
          format: hash
          example: "0xc421...fb04"
          description: "The hash of the block containing this transaction"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        nonce:
          type: number
          format: uint64
          example: 232
          description: "sequence number of the transactions sent by the sender"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        from:
          type: string
          format: address
          description: "address from which the transaction was sent"
        to:
          type: string
          format: address
          description: "address to which the transaction was sent"
        value:
          type: string
          format: wei
          example: "0"
          description: "the amount of wei sent with this transactions"
        gas:
          type: string
          format: gas
          example: "158660"
          description: "the maximum number of gas allowed for this transaction"
        input:
          type: string
          format: bytes
          example: "0x3d18b912"
          description: "byte data either containing a message or funcational data for a smart contracts. See the --articulate"
        receipt:
          type: object
          items:
            $ref: "#/components/schemas/receipt"
        statements:
          type: array
          items:
            $ref: "#/components/schemas/reconciliation"
          description: "array of reconciliations"
        articulatedTx:
          type: object
          items:
            $ref: "#/components/schemas/function"
        compressedTx:
          type: string
          example: "0x3d18b912( )"
          description: "truncated, more readable version of the articulation"
        hasToken:
          type: boolean
          description: "`true` if the transaction is token related, `false` otherwise"
        finalized:
          type: boolean
          example: true
          description: "flag indicating the system considers this data final"
    receipt:
      description: "receipt data for a given transaction directly from the blockchain"
      type: object
      properties:
        status:
          type: number
          format: uint32
          description: "`1` on transaction suceess, `null` if tx preceeds Byzantium, `0` otherwise"
        contractAddress:
          type: string
          format: address
          description: "the address of the newly created contract, if any"
        gasUsed:
          type: string
          format: gas
          description: "the amount of gas actually used by the transaction"
        logs:
          type: array
          items:
            $ref: "#/components/schemas/log"
          description: "a possibly empty array of logs"
    log:
      description: "log data for a given transaction directly from the blockchain"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        address:
          type: string
          format: address
          example: "0xf503...179b"
          description: "the smart contract that emitted this log"
        logIndex:
          type: number
          format: blknum
          example: 354
          description: "the zero-indexed position of this log relative to the block"
        topics:
          type: array
          items:
            $ref: "#/components/schemas/topic"
          description: "The first topic hashes event signature of the log, up to 3 additional index parameters may appear"
        data:
          type: string
          format: bytes
          example: "0x0000...3ff6"
          description: "any remaining un-indexed parameters to the event"
        articulatedLog:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "a human-readable version of the topic and data fields"
        compressedLog:
          type: string
          example: "Transfer(0xcfa...9f54..."
          description: "a truncated, more readable version of the articulation"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block this log appears in"
    trace:
      description: "trace data for a given transaction directly from the blockchain"
      type: object
      properties:
        blockHash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "The hash of the block containing this trace"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionHash:
          type: string
          format: hash
          description: "the transaction's hash containing this trace"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        traceAddress:
          type: array
          items:
            $ref: "#/components/schemas/string"
          description: "a particular trace's address in the trace tree"
        subtraces:
          type: number
          format: uint64
          description: "the number of children traces that the trace hash"
        type:
          type: string
          description: "the type of the trace"
        action:
          type: object
          items:
            $ref: "#/components/schemas/traceAction"
          description: "the trace action for this trace"
        result:
          type: object
          items:
            $ref: "#/components/schemas/traceResult"
          description: "the trace result of this trace"
        articulatedTrace:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "human readable version of the trace action input data"
        compressedTrace:
          type: string
          description: "a compressed string version of the articulated trace"
    traceAction:
      description: "the trace action data for a given trace directly from the blockchain"
      type: object
      properties:
        from:
          type: string
          format: address
          description: "address from which the trace was sent"
        to:
          type: string
          format: address
          description: "address to which the trace was sent"
        gas:
          type: string
          format: gas
          example: "158660"
          description: "the maximum number of gas allowed for this trace"
        input:
          type: string
          format: bytes
          description: "an encoded version of the function call"
        callType:
          type: string
          description: "the type of call"
        refundAddress:
          type: string
          format: address
          example: "0xf503...179b"
          description: "if the call type is self-destruct, the address to which the refund is sent"
    traceResult:
      description: "the trace result data for a given trace directly from the blockchain"
      type: object
      properties:
        newContract:
          type: string
          format: address
          example: "0xf503...179b"
          description: "Address of new contract, if any"
        code:
          type: string
          format: bytes
          description: "if this trace is creating a new smart contract, the byte code of that contract"
        gasUsed:
          type: string
          format: gas
          description: "the amount of gas used by this trace"
        output:
          type: string
          format: bytes
          description: "the result of the call of this trace"
    datedBlock:
      description: "An indentified block named for convienience"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the block"
        date:
          type: string
          format: date
          example: "2015-07-30 15:34:53 UTC"
          description: "Human readable version of timestamp"
    state:
      description: "the on-chain state of a given address"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the block number at which this state was taken"
        balance:
          type: string
          format: wei
          example: "258843698360318500"
          description: "the balance at the address at the given block height"
        nonce:
          type: number
          format: uint64
          example: 115
          description: "the nonce of the address at the given block height"
        code:
          type: string
          format: bytes
          example: "0x"
          description: "the byte code at the address (if this is a smart contract)"
        storage:
          type: string
          format: bytes
          example: "0x0000...0000"
          description: "this field is un-implemented and current returns the first storage location in a smart contract"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "the address of the state being queried"
        deployed:
          type: number
          format: blknum
          example: 8901011
          description: "the block number at which this smart contract was deployed (if a smart contact)"
        accttype:
          type: string
          example: "one of 'EOA' or 'Contract'"
          description: "the type of the address at the given block"
        ether:
          type: number
          format: double
          example: 0.25884369
          description: "the balance of the address in ethers"
    result:
      description: "the result of a call to a smart contract"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the block number at which this call was made"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "the address of contract being called"
        signature:
          type: string
          description: "the canonical signature of the interface"
        encoding:
          type: string
          description: "the encoding for the function call"
        bytes:
          type: string
          description: "the bytes data following the encoding of the call"
        callResult:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "the result of the call to the contract"
        compressedResult:
          type: string
          description: "the compressed version of the result of the call to the contract"
        deployed:
          type: number
          format: blknum
          example: 8901011
          description: "the block number at which this smart contract was deployed (if a smart contact)"
    token:
      description: "on-chain token related data for a give address at a given block height"
      type: object
      properties:
        holder:
          type: string
          format: address
          example: "0x2910...63d2"
          description: "the address for which we are reporting the token balance"
        balance:
          type: string
          format: wei
          example: "258843698360318500"
          description: "the balance at the address at the given block height"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "description: the address of the token contract being queried"
        name:
          type: string
          example: "The DAO Original"
          description: "the name of the token contract, if available"
        symbol:
          type: string
          example: "GTC"
          description: "the symbol for this token contract"
        decimals:
          type: number
          format: uint64
          example: 18
          description: "the number of decimals for the token contract"
        is_contract:
          type: boolean
          description: "`true` if the address is a smart contract, `false` otherwise"
        is_erc20:
          type: boolean
          description: "`true` if the address is an ERC20, `false` otherwise"
        is_erc721:
          type: boolean
          description: "`true` if the address is an ERC720, `false` otherwise"
    status:
      description: "This data model carries information about the TrueBlocks system including both the API server and the local binary caches"
      type: object
      properties:
        client_version:
          type: string
          description: "the version string as reported by the rpcProvider"
        client_ids:
          type: string
          description: "netword_id and chain_id from the rpcProvider"
        trueblocks_version:
          type: string
          description: "the TrueBlocks version string"
        rpc_provider:
          type: string
          description: "the current rpcProvider"
        balance_provider:
          type: string
          description: "the current archive node balance provider (defaults to rpcProvider)"
        config_path:
          type: string
          description: "the path to config files"
        cache_path:
          type: string
          description: "the path to the local binary caches"
        index_path:
          type: string
          description: "the path to the local binary indexes"
        host:
          type: string
          description: "the host portion of the local API server"
        is_testing:
          type: boolean
          description: "`true` if the server is running in test mode"
        is_api:
          type: boolean
          description: "`true` if the server is running in API mode"
        is_docker:
          type: boolean
          description: "`true` if running under a docker image"
        is_scraping:
          type: boolean
          description: "`true` if the index scraper is running"
        is_archive:
          type: boolean
          description: "`true` if the rpcProvider is an archive node"
        is_tracing:
          type: boolean
          description: "`true` if the rpcProvider provides Parity traces"
        has_eskey:
          type: boolean
          description: "`true` if an EtherScan key is present"
        has_pinkey:
          type: boolean
          description: "`true` if a Pinata API key is present"
        ts:
          type: number
          format: timestamp
          description: "the timestamp when this status data was produced"
    cache:
      description: "The cache data model carries information about the various local binary caches"
      type: object
      properties:
        type:
          type: string
          description: "the type of the cache (one of the nine different types)"
        path:
          type: string
          description: "the physical path to the cache on the hard drive"
        nFiles:
          type: number
          format: uint64
          description: "the number of files in the cache"
        nFolders:
          type: number
          format: uint64
          description: "the number of subfolders in the cache"
        sizeInBytes:
          type: number
          format: uint64
          description: "the size of the cache in bytes"
    pinnedChunk:
      description: "the IPFS hashes of the index chunk and its associated Bloom filter for the given block range"
      type: object
      properties:
        fileName:
          type: string
          example: "013142464-013145212"
          description: "for each chunk, the range of blocks contained in that chunk"
        bloomHash:
          type: ipfshash
          example: "QmXHjjY...HDqvWT"
          description: "the IPFS hash of the bloom filter at that range"
        indexHash:
          type: ipfshash
          example: "QmTbYpR...qWLj44"
          description: "the IPFS hash of the index chunk at that range"
    manifest:
      description: "a manifest of the IPFS hashes created for the unchained index"
      type: object
      properties:
        indexFormat:
          type: string
          description: "IPFS cid of file describing the file format of an index chunk"
        bloomFormat:
          type: string
          description: "IPFS cid of file describing the associated bloom filter"
        firstPin:
          type: number
          format: blknum
          description: "the block number of the first pin in the manifest (always zero)"
        lastPin:
          type: number
          format: blknum
          description: "the most recent block included in this manifest"
        pins:
          type: array
          items:
            $ref: "#/components/schemas/pinnedChunk"
          description: "a list of all the pins in the unchained index"
    function:
      description: "a human readable representation of a Solidity function call or event"
      type: object
      properties:
        name:
          type: string
          description: "the name of the interface"
        type:
          type: string
          description: "the type of the interface, either 'event' or 'function'"
        signature:
          type: string
          description: "the canonical signature of the interface"
        encoding:
          type: string
          description: "the signature encoded with keccak"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "the input parameters to the function, if any"
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "the output parameters to the function, if any"
    parameter:
      description: "an input or output paramter to a function"
      type: object
      properties:
        type:
          type: string
          description: "the type of this parameter"
        name:
          type: string
          description: "the name of this parameter"
        str_default:
          type: string
          description: "the default value of this parameter, if any"
        indexed:
          type: boolean
          description: "`true` if this parameter is indexed"
        internalType:
          type: string
          description: "for composite types, the internal type of the parameter"
        components:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "for composite types, the parameters making up the composite"
    quote:
      description: "the closing price of Ether in USD at a particular moment"
      type: object
      properties:
        timestamp:
          type: number
          format: timestamp
          example: 1438270144
          description: "the timestamp of this quote"
        close:
          type: number
          format: double
          example: 1240.10
          description: "price of the asset in US dollars"
        date:
          type: string
          format: date
          example: "2018-09-30 01:15:17 UTC"
          description: "the date of the associated timestamp"
        name:
          type: string
          example: "Byzantium"
          description: "the name of the block for some named 'special' blocks"
    response:
      required:
        - result
      type: object
      properties:
        data:
          type: object
        error:
          type: array
          example:
            - error 1
            - error 2
          items:
            type: string
    hash:
      type: string
      format: hash
      description: "The 32-byte hash"
      example: "0xf128...1e98"
    string:
      type: string
    topic:
      type: string
      format: bytes
      description: "One of four 32-byte topics of a log"
      example: "0xf128...1e98"

