components:
  schemas:
    appearance:
      description: "an appearance (`<blockNumber,transactionIndex>`) of an address anywhere on the chain (note that in some cases, not all fields will appear depending on the command)"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the address of the appearance"
        blockNumber:
          type: number
          format: blknum
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          description: "the index of the transaction in the block"
        traceIndex:
          type: number
          format: blknum
          description: "the zero-based index of the trace in the transaction"
        reason:
          type: string
          description: "the location in the data where the appearance was found"
        name:
          type: string
          description: "the name of the address, if found"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp for this appearance"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date for this appearance"
    monitor:
      description: "a local file indicating a user's interest in an address. Includes caches for reconicilations, transactions, and appearances as well as an optional association to named account"
      type: object
      properties:
        nApps:
          type: number
          format: blknum
          description: "the number of appearances for this monitor"
        firstApp:
          type: number
          format: blknum
          description: "the first block at which this address appears"
        latestApp:
          type: number
          format: blknum
          description: "the latest block at which this address appears"
        sizeInBytes:
          type: number
          format: uint64
          description: "the size of this monitor on disc"
        tags:
          type: string
          description: "the tag given to this address"
        address:
          type: string
          format: address
          description: "the address being monitored"
        name:
          type: string
          description: "the name given to this address"
        isCustom:
          type: boolean
          description: "`true` if this address is customized"
        deleted:
          type: boolean
          description: "`true` if deleted, `false` otherwise"
        symbol:
          type: string
        source:
          type: string
        decimals:
          type: number
          format: uint64
        isContract:
          type: boolean
    name:
      description: "an association between a human-readable name and an address used throughout TrueBlocks"
      type: object
      properties:
        tags:
          type: string
          example: "31-Gitcoin:Core"
          description: "colon separated list of tags"
        address:
          type: string
          format: address
          example: "0xabea...fbef"
          description: "the address associated with this name"
        name:
          type: string
          example: "zkSync"
          description: "the name associated with this address (retrieved from on-chain data if available)"
        symbol:
          type: string
          example: "GTC"
          description: "the symbol for this address (retrieved from on-chain data if available)"
        source:
          type: string
          example: "On-chain"
          description: "user supplied source of where this name was found (or on-chain if name is on-chain)"
        decimals:
          type: number
          format: uint64
          example: 18
          description: "number of decimals retrieved from an ERC20 smart contract, defaults to 18"
        petname:
          type: string
          example: "ideally-known-locust"
          description: "the petname such as described here http://www.erights.org/elib/capability/pnml.html"
        deleted:
          type: boolean
          description: "`true` if deleted, `false` otherwise"
        isCustom:
          type: boolean
          description: "`true` if the address is a custom address, `false` otherwise"
        isPrefund:
          type: boolean
          description: "`true` if the address was one of the prefund addresses, `false` otherwise"
        isContract:
          type: boolean
          description: "`true` if the address is a smart contract, `false` otherwise"
        isErc20:
          type: boolean
          description: "`true` if the address is an ERC20, `false` otherwise"
        isErc721:
          type: boolean
          description: "`true` if the address is an ERC720, `false` otherwise"
    abi:
      description: "a JSON object describing the functions and events in an Ethereum smart contract"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the smart contract that implements this abi"
        interfaces:
          type: array
          items:
            $ref: "#/components/schemas/function"
          description: "the list of events and functions on this abi"
    appearanceCount:
      description: "the number of records, file size, and last visited block for a given monitor"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the address for this count"
        nRecords:
          type: number
          format: uint64
          description: "the number of appearances for the given address"
        fileSize:
          type: number
          format: uint64
          description: "the size of the monitor file containing those appearances"
    bounds:
      description: "show first block and last block an address appears in along with timestamps and dates"
      type: object
      properties:
        count:
          type: number
          format: uint64
          description: "the number of appearances for this address"
        firstApp:
          type: RawAppearance
          description: "the block number and transaction id of the first appearance of this address"
        firstTs:
          type: number
          format: timestamp
          description: "the timestamp of the first appearance of this address"
        firstDate:
          type: string
          format: datetime
          description: "a calculated field -- the date of the first appearance"
        latestApp:
          type: RawAppearance
          description: "the block number and transaction id of the latest appearance of this address"
        latestTs:
          type: number
          format: timestamp
          description: "the timestamp of the latest appearance of this address"
        latestDate:
          type: string
          format: datetime
          description: "a calculated field -- the date of the latest appearance"
    statement:
      description: "a statement, including all inflows and outflows, for a single transfer of an asset (including ETH) to or from a given address"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        logIndex:
          type: number
          format: blknum
          example: 2
          description: "the zero-indexed position the log in the block, if applicable"
        transactionHash:
          type: string
          format: hash
          description: "the hash of the transaction that triggered this reconciliation"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of this transaction"
        assetAddr:
          type: string
          format: address
          example: "0x6b17...1d0f"
          description: "0xeeee...eeee for ETH reconciliations, the token address otherwise"
        assetSymbol:
          type: string
          description: "either ETH, WEI, or the symbol of the asset being reconciled as extracted from the chain"
        decimals:
          type: number
          format: uint64
          description: "the value of `decimals` from an ERC20 contract or, if ETH or WEI, then 18"
        spotPrice:
          type: number
          format: double
          description: "the on-chain price in USD (or if a token in ETH, or zero) at the time of the transaction"
        priceSource:
          type: string
          description: "the on-chain source from which the spot price was taken"
        accountedFor:
          type: string
          format: address
          example: "0x1bd0...9ce9"
          description: "the address being accounted for in this reconciliation"
        sender:
          type: string
          format: address
          example: "0xf503...179b"
          description: "the initiator of the transfer (the sender)"
        recipient:
          type: string
          format: address
          example: "0x38d1...1310"
          description: "the receiver of the transfer (the recipient)"
        begBal:
          type: string
          format: int256
          description: "the beginning balance of the asset prior to the transaction"
        amountNet:
          type: string
          format: int256
          description: "a calculated field -- totalIn - totalOut"
        endBal:
          type: string
          format: int256
          description: "the on-chain balance of the asset (see notes about intra-block reconciliations)"
        reconciliationType:
          type: string
          description: "one of `regular`, `prevDiff-same`, `same-nextDiff`, or `same-same`. Appended with `eth` or `token`"
        reconciled:
          type: boolean
          example: [true|false]
          description: "a calculated field -- true if `endBal === endBalCalc` and `begBal === prevBal`. `false` otherwise."
        totalIn:
          type: string
          format: int256
          description: "a calculated field -- the sum of the following `In` fields"
        amountIn:
          type: string
          format: int256
          description: "the top-level value of the incoming transfer for the accountedFor address"
        internalIn:
          type: string
          format: int256
          description: "the internal value of the incoming transfer for the accountedFor address"
        selfDestructIn:
          type: string
          format: int256
          description: "the incoming value of a self-destruct if recipient is the accountedFor address"
        minerBaseRewardIn:
          type: string
          format: int256
          description: "the base fee reward if the miner is the accountedFor address"
        minerNephewRewardIn:
          type: string
          format: int256
          description: "the nephew reward if the miner is the accountedFor address"
        minerTxFeeIn:
          type: string
          format: int256
          description: "the transaction fee reward if the miner is the accountedFor address"
        minerUncleRewardIn:
          type: string
          format: int256
          description: "the uncle reward if the miner who won the uncle block is the accountedFor address"
        correctingIn:
          type: string
          format: int256
          description: "for unreconciled token transfers only, the incoming amount needed to correct the transfer so it balances"
        prefundIn:
          type: string
          format: int256
          description: "at block zero (0) only, the amount of genesis income for the accountedFor address"
        totalOut:
          type: string
          format: int256
          description: "a calculated field -- the sum of the following `Out` fields"
        amountOut:
          type: string
          format: int256
          description: "the amount (in units of the asset) of regular outflow during this transaction"
        internalOut:
          type: string
          format: int256
          description: "the value of any internal value transfers out of the accountedFor account"
        correctingOut:
          type: string
          format: int256
          description: "for unreconciled token transfers only, the outgoing amount needed to correct the transfer so it balances"
        selfDestructOut:
          type: string
          format: int256
          description: "the value of the self-destructed value out if the accountedFor address was self-destructed"
        gasOut:
          type: string
          format: int256
          description: "if the transaction's original sender is the accountedFor address, the amount of gas expended"
        totalOutLessGas:
          type: string
          format: int256
          description: "a calculated field -- totalOut - gasOut"
        prevAppBlk:
          type: number
          format: blknum
          example: 10021
          description: "the block number of the previous appearance, or 0 if this is the first appearance"
        prevBal:
          type: string
          format: int256
          description: "the account balance for the given asset for the previous reconciliation"
        begBalDiff:
          type: string
          format: int256
          description: "a calculated field -- difference between expected beginning balance and balance at last reconciliation, if non-zero, the reconciliation failed"
        endBalDiff:
          type: string
          format: int256
          description: "a calculated field -- endBal - endBalCalc, if non-zero, the reconciliation failed"
        endBalCalc:
          type: string
          format: int256
          description: "a calculated field -- begBal + amountNet"
        correctingReason:
          type: string
          description: "the reason for the correcting entries, if any"
    block:
      description: "block data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        gasLimit:
          type: string
          format: gas
          example: "5000"
          description: "the system-wide maximum amount of gas permitted in this block"
        hash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "the hash of the current block"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        parentHash:
          type: string
          format: hash
          example: "0x66fc...31c9"
          description: "hash of previous block"
        miner:
          type: string
          format: address
          example: "0xf927...2b13"
          description: "address of block's winning miner"
        difficulty:
          type: number
          format: uint64
          example: 598133194256
          description: "the computational difficulty at this block"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of the object"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/transaction"
          description: "a possibly empty array of transactions or transaction hashes"
        baseFeePerGas:
          type: string
          format: wei
          example: "120911"
          description: "the base fee for this block"
        uncles:
          type: array
          items:
            $ref: "#/components/schemas/hash"
    transaction:
      description: "transaction data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        hash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "the hash of the transaction"
        blockHash:
          type: string
          format: hash
          example: "0xc421...fb04"
          description: "the hash of the block containing this transaction"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        nonce:
          type: number
          format: uint64
          example: 232
          description: "sequence number of the transactions sent by the sender"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        date:
          type: string
          format: datetime
        from:
          type: string
          format: address
          description: "address from which the transaction was sent"
        to:
          type: string
          format: address
          description: "address to which the transaction was sent"
        value:
          type: string
          format: wei
          example: "0"
          description: "the amount of wei sent with this transactions"
        gas:
          type: string
          format: gas
          example: "158660"
          description: "the maximum number of gas allowed for this transaction"
        gasPrice:
          type: string
          format: gas
          example: "63525836552"
          description: "the number of wei per unit of gas the sender is willing to spend"
        input:
          type: string
          format: bytes
          example: "0x3d18b912"
          description: "byte data either containing a message or funcational data for a smart contracts. See the --articulate"
        receipt:
          type: object
          items:
            $ref: "#/components/schemas/receipt"
        statements:
          type: array
          items:
            $ref: "#/components/schemas/statement"
          description: "array of reconciliations"
        articulatedTx:
          type: object
          items:
            $ref: "#/components/schemas/function"
        hasToken:
          type: boolean
          description: "`true` if the transaction is token related, `false` otherwise"
        isError:
          type: boolean
          description: "`true` if the transaction ended in error, `false` otherwise"
        compressedTx:
          type: string
          example: "0x3d18b912( )"
          description: "truncated, more readable version of the articulation"
    transfer:
      description: "the representation of a token transfer"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        logIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the log in the transaction"
        transactionHash:
          type: string
          format: hash
          description: "the hash of the transaction that triggered this reconciliation"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of this transaction"
        sender:
          type: string
          format: address
          example: "0x1bd0...9ce9"
          description: "the initiator of the transfer (the sender)"
        recipient:
          type: string
          format: address
          example: "0x38d1...1310"
          description: "the receiver of the transfer (the recipient)"
        assetAddr:
          type: string
          format: address
          example: "0xf503...179b"
          description: "0xeeee...eeee for ETH reconcilations, the token address otherwise"
        assetSymbol:
          type: string
          description: "either ETH, WEI or the symbol of the asset being reconciled as queried from the chain"
        decimals:
          type: number
          format: uint64
          description: "Equivalent to the queried value of `decimals` from an ERC20 contract or, if ETH or WEI then 18"
        amount:
          type: string
          format: int256
          description: "the amount of the transfer in the units of the asset"
        spotPrice:
          type: number
          format: double
          description: "the on-chain price in USD (or if a token in ETH, or zero) at the time of the transaction"
        priceSource:
          type: string
          description: "the on-chain source from which the spot price was taken"
        encoding:
          type: string
          description: "the four-byte encoding of the transaction's function call"
    receipt:
      description: "receipt data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        blockHash:
          type: string
          format: hash
        blockNumber:
          type: number
          format: blknum
        contractAddress:
          type: string
          format: address
          description: "the address of the newly created contract, if any"
        gasUsed:
          type: string
          format: gas
          description: "the amount of gas actually used by the transaction"
        isError:
          type: boolean
        logs:
          type: array
          items:
            $ref: "#/components/schemas/log"
          description: "a possibly empty array of logs"
        status:
          type: number
          format: uint32
          description: "`1` on transaction suceess, `null` if tx preceeds Byzantium, `0` otherwise"
        transactionHash:
          type: string
          format: hash
        transactionIndex:
          type: number
          format: blknum
    log:
      description: "log data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: uint64
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        logIndex:
          type: number
          format: uint64
          example: 354
          description: "the zero-indexed position of this log relative to the block"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block this log appears in"
        date:
          type: string
          format: datetime
          description: "the date of the block this log appears in (calculated)"
        address:
          type: string
          format: address
          example: "0xf503...179b"
          description: "the smart contract that emitted this log"
        topics:
          type: array
          items:
            $ref: "#/components/schemas/topic"
          description: "the first topic hashes event signature of the log, up to 3 additional index parameters may appear"
        data:
          type: string
          format: bytes
          example: "0x0000...3ff6"
          description: "any remaining un-indexed parameters to the event"
        transactionHash:
          type: string
          format: hash
          description: "the hash of the transction"
        blockHash:
          type: string
          format: hash
          description: "the hash of the block"
        articulatedLog:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "a human-readable version of the topic and data fields"
        compressedLog:
          type: string
          example: "Transfer(0xcfa...9f54..."
          description: "a truncated, more readable version of the articulation"
    logFilter:
      description: "used by the fast path log queries for various commands"
      type: object
      properties:
        fromBlock:
          type: number
          format: blknum
          description: "the first block in the block range to query with eth_getLogs"
        toBlock:
          type: number
          format: blknum
          description: "the last block in the range to query with eth_getLogs"
        blockHash:
          type: string
          format: hash
          description: "an alternative to blocks specification, the hash of the block to query"
        emitters:
          type: array
          items:
            $ref: "#/components/schemas/address"
          description: "one or more emitting addresses from which logs were emitted"
        topics:
          type: array
          items:
            $ref: "#/components/schemas/topic"
          description: "one or more topics which logs represent"
    trace:
      description: "trace data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        blockHash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "the hash of the block containing this trace"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block"
        date:
          type: string
          format: datetime
          description: "a calculated value - the date of the block"
        transactionHash:
          type: string
          format: hash
          description: "the transaction's hash containing this trace"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        traceAddress:
          type: array
          items:
            $ref: "#/components/schemas/string"
          description: "a particular trace's address in the trace tree"
        subtraces:
          type: number
          format: uint64
          description: "the number of children traces that the trace hash"
        type:
          type: string
          description: "the type of the trace"
        action:
          type: object
          items:
            $ref: "#/components/schemas/traceAction"
          description: "the trace action for this trace"
        result:
          type: object
          items:
            $ref: "#/components/schemas/traceResult"
          description: "the trace result of this trace"
        articulatedTrace:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "human readable version of the trace action input data"
        compressedTrace:
          type: string
          description: "a compressed string version of the articulated trace"
    traceAction:
      description: "trace action data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        from:
          type: string
          format: address
          description: "address from which the trace was sent"
        to:
          type: string
          format: address
          description: "address to which the trace was sent"
        gas:
          type: string
          format: gas
          example: "158660"
          description: "the maximum number of gas allowed for this trace"
        input:
          type: string
          format: bytes
          description: "an encoded version of the function call"
        callType:
          type: string
          description: "the type of call"
        refundAddress:
          type: string
          format: address
          example: "0xf503...179b"
          description: "if the call type is self-destruct, the address to which the refund is sent"
        rewardType:
          type: string
          description: "the type of reward"
    traceResult:
      description: "trace result data as returned from the RPC (with slight enhancements)"
      type: object
      properties:
        address:
          type: string
          format: address
          example: "0xf503...179b"
          description: "Address of new contract, if any"
        code:
          type: string
          format: bytes
          description: "if this trace is creating a new smart contract, the byte code of that contract"
        gasUsed:
          type: string
          format: gas
          description: "the amount of gas used by this trace"
        output:
          type: string
          format: bytes
          description: "the result of the call of this trace"
    traceCount:
      description: "counts the number of traces in a transaction"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10
          description: "the block number"
        transactionIndex:
          type: number
          format: blknum
          example: 10
          description: "the transaction index"
        transactionHash:
          type: string
          format: hash
          example: "10"
          description: "the transaction's hash"
        timestamp:
          type: number
          format: timestamp
          example: 10
          description: "the timestamp of the block"
        date:
          type: string
          format: datetime
          example: "10"
          description: "a calculated field -- the date of the block"
        tracesCnt:
          type: number
          format: uint64
          example: 30
          description: "the number of traces in the transaction"
    traceFilter:
      description: "used by chifra traces --filter option to query for traces"
      type: object
      properties:
        fromBlock:
          type: string
          description: "The first block to include in the queried list of traces."
        toBlock:
          type: string
          description: "The last block to include in the queried list of traces."
        fromAddress:
          type: array
          items:
            $ref: "#/components/schemas/address"
          description: "If included, only traces `from` this address will be included."
        toAddress:
          type: array
          items:
            $ref: "#/components/schemas/address"
          description: "If included, only traces `to` this address will be included."
        after:
          type: number
          format: uint64
          description: "Only traces after this many traces are included."
        count:
          type: number
          format: uint64
          description: "Only this many traces are included."
    blockCount:
      description: "counts of various parts of the block data such as tx_count, trace_count, etc."
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 1001001
          description: "the block's block number"
        timestamp:
          type: number
          format: timestamp
          example: 10
          description: "the timestamp of the block"
        date:
          type: string
          format: datetime
          example: "10"
          description: "a calculated field -- the date of the block"
        transactionsCnt:
          type: number
          format: uint64
          example: 239
          description: "the number transactions in the block"
        unclesCnt:
          type: number
          format: uint64
          example: 2
          description: "the number of uncles in the block"
        logsCnt:
          type: number
          format: uint64
          example: 581
          description: "the number of logs in the block"
        tracesCnt:
          type: number
          format: uint64
          example: 1295
          description: "the number of traces in the block"
        addressCnt:
          type: number
          format: uint64
          example: 318
          description: "the number of address appearances in the block per transaction"
    namedBlock:
      description: "a block that has been given a particular name such as `first` or `latest`"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 4370000
          description: "the number of the block"
        timestamp:
          type: number
          format: timestamp
          example: 1508131331
          description: "the Unix timestamp of the block"
        date:
          type: string
          format: datetime
          example: "2017-10-16 05:22:11 UTC"
          description: "human readable version of timestamp"
        name:
          type: string
          example: "byzantium"
          description: "an optional name for the block"
        description:
          type: string
          description: "an optional description of the block"
    timestamp:
      description: "the timestamp, date and difference in timestamp of previous block produced by chifra when"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 4370000
          description: "the number of the block"
        timestamp:
          type: number
          format: timestamp
          example: 1508131331
          description: "the Unix timestamp of the block"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of the block"
        diff:
          type: int64
          example: "12"
          description: "the number of seconds since the last block"
    timestampCount:
      description: "the number of timestamps in the timestamps database"
      type: object
      properties:
        count:
          type: number
          format: uint64
          description: "the number of timestamps in the timestamps database"
    result:
      description: "the result (articulated if possible, as bytes otherwise) of a call to a smart contract"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the block number at which this call was made"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block for this call"
        date:
          type: string
          format: datetime
          description: "the date of the block for this call (calculated)"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "the address of contract being called"
        name:
          type: string
          description: "the name of the function call"
        encoding:
          type: string
          description: "the encoding for the function call"
        signature:
          type: string
          description: "the canonical signature of the interface"
        encodedArguments:
          type: string
          description: "the bytes data following the encoding of the call"
        articulatedOut:
          type: object
          items:
            $ref: "#/components/schemas/function"
          description: "the result of the call articulated as other models"
    state:
      description: "the state of an Ethereum account (EOA or smart contract) on-chain"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the block number at which this call was made"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block for this call"
        date:
          type: string
          format: datetime
          description: "the date of the block for this call (calculated)"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "the address of contract being called"
        accountType:
          type: string
          description: "the type of account at the given block"
        balance:
          type: string
          format: wei
          description: "the balance of the account at the given block"
        code:
          type: string
          description: "the code of the account"
        deployed:
          type: number
          format: blknum
          description: "for smart contracts only, the block number at which the contract was deployed"
        nonce:
          type: number
          format: uint64
          description: "the nonce of the account at the given block"
        proxy:
          type: string
          format: address
          description: "the proxy address of the account at the given block"
    token:
      description: "on-chain token-related data such as totalSupply, symbol, decimals, and individual balances for a given address at a given block"
      type: object
      properties:
        blockNumber:
          type: number
          format: blknum
          description: "the block at which the report is made"
        transactionIndex:
          type: number
          format: blknum
          description: "the transaction index (if applicable) at which the report is made"
        timestamp:
          type: number
          format: timestamp
          description: "the timestamp of the block"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of the block"
        totalSupply:
          type: string
          format: int256
          description: "the total supply of the token contract"
        address:
          type: string
          format: address
          example: "0xa1e4...63b4"
          description: "the address of the token contract"
        holder:
          type: string
          format: address
          example: "0x2910...63d2"
          description: "the holder address for which we are reporting"
        priorBalance:
          type: string
          format: int256
          description: "the holder's asset balance at its prior appearance"
        balance:
          type: string
          format: int256
          example: "258843698360318500"
          description: "the holder's asset balance at the given block height"
        diff:
          type: string
          format: int256
          description: "the difference#&44; if any#&44; between the prior and current balance"
        name:
          type: string
          example: "GitCoin"
          description: "the name of the token contract, if available"
        symbol:
          type: string
          example: "GTC"
          description: "the symbol of the token contract"
        decimals:
          type: number
          format: uint64
          example: 18
          description: "the number of decimals for the token contract"
        type:
          type: TokenType
          example: "ERC721"
          description: "the type of token (ERC20 or ERC721) or none"
    config:
      description: "status-related data about the TrueBlocks system including the server and local binary caches"
      type: object
      properties:
        clientVersion:
          type: string
          description: "the version string as reported by the rpcProvider"
        clientIds:
          type: string
          description: "netword_id and chain_id from the rpcProvider"
        trueblocksVersion:
          type: string
          description: "the TrueBlocks version string"
        rpcProvider:
          type: string
          description: "the current rpcProvider"
        configPath:
          type: string
          description: "the path to config files"
        cachePath:
          type: string
          description: "the path to the local binary caches"
        indexPath:
          type: string
          description: "the path to the local binary indexes"
        host:
          type: string
          description: "the host portion of the local API server"
        isTesting:
          type: boolean
          description: "`true` if the server is running in test mode"
        isApi:
          type: boolean
          description: "`true` if the server is running in API mode"
        isScraping:
          type: boolean
          description: "`true` if the index scraper is running"
        isArchive:
          type: boolean
          description: "`true` if the rpcProvider is an archive node"
        isTracing:
          type: boolean
          description: "`true` if the rpcProvider provides Parity traces"
        hasEskey:
          type: boolean
          description: "`true` if an Etherscan key is present"
        hasPinkey:
          type: boolean
          description: "`true` if a Pinata API key is present"
        ts:
          type: number
          format: timestamp
          description: "the timestamp when this status data was produced"
        chains:
          type: array
          items:
            $ref: "#/components/schemas/chain"
          description: "the list of configured chains"
        caches:
          type: array
          items:
            $ref: "#/components/schemas/cacheItem"
          description: "a collection of information concerning the binary caches"
    manifest:
      description: "a JSON object containing records for each bloom filter and index chunk in the Unchained Index"
      type: object
      properties:
        version:
          type: string
          description: "the version string hashed into the chunk data"
        chain:
          type: string
          description: "the chain to which this manifest belongs"
        schemas:
          type: string
          format: ipfshash
          description: "IPFS cid of file describing the schemas for the various databases"
        databases:
          type: string
          format: ipfshash
          description: "IPFS cid of file containing CIDs for the various databases"
        chunks:
          type: array
          items:
            $ref: "#/components/schemas/chunkRecord"
          description: "a list of the IPFS hashes of all of the chunks in the unchained index"
    chunkRecord:
      description: "a single record in the manifest detailing the IPFS hases and file sizes for each bloom filter and index chunk"
      type: object
      properties:
        range:
          type: string
          format: blkrange
          example: "013142464-013145212"
          description: "the block range (inclusive) covered by this chunk"
        bloomHash:
          type: string
          format: ipfshash
          example: "QmXHjjY...HDqvWT"
          description: "the IPFS hash of the bloom filter at that range"
        indexHash:
          type: string
          format: ipfshash
          example: "QmTbYpR...qWLj44"
          description: "the IPFS hash of the index chunk at that range"
        bloomSize:
          type: int64
          description: "the size of the bloom filter in bytes"
        indexSize:
          type: int64
          description: "the size of the index portion in bytes"
    chunkIndex:
      description: "internal-use only data model detailing a single index chunk file"
      type: object
      properties:
        range:
          type: string
          format: blkrange
          example: "013142464-013145212"
          description: "the block range (inclusive) covered by this chunk"
        magic:
          type: string
          description: "an internal use only magic number to indicate file format"
        hash:
          type: string
          format: hash
          example: "QmXHjjY...HDqvWT"
          description: "the hash of the specification under which this chunk was generated"
        nAddresses:
          type: number
          format: uint64
          description: "the number of addresses in this chunk"
        nAppearances:
          type: number
          format: uint64
          description: "the number of appearances in this chunk"
        size:
          type: number
          format: uint64
          description: "the size of the chunk in bytes"
    chunkBloom:
      description: "internal-use only data model detailing a single bloom filter file"
      type: object
      properties:
        range:
          type: string
          format: blkrange
          example: "013142464-013145212"
          description: "the block range (inclusive) covered by this chunk"
        magic:
          type: string
          description: "an internal use only magic number to indicate file format"
        hash:
          type: string
          format: hash
          example: "QmXHjjY...HDqvWT"
          description: "the hash of the specification under which this chunk was generated"
        nBlooms:
          type: number
          format: uint64
          description: "the number of individual bloom filters in this bloom file"
        nInserted:
          type: number
          format: uint64
          description: "the number of addresses inserted into the bloom file"
        size:
          type: number
          format: uint64
          description: "the size on disc in bytes of this bloom file"
        byteWidth:
          type: number
          format: uint64
          description: "the width of the bloom filter"
    chunkAddress:
      description: "internal-use only data model detailing a single address record in the address table of an index chunk"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the address in this record"
        range:
          type: string
          format: blkrange
          example: "013142464-013145212"
          description: "the block range of the chunk from which this address record was taken"
        offset:
          type: number
          format: uint64
          description: "the offset into the appearance table of the first record for this address"
        count:
          type: number
          format: uint64
          description: "the number of records in teh appearance table for this address"
    chunkStats:
      description: "summary statistics about an Unchained Index bloom filter and index chunk"
      type: object
      properties:
        range:
          type: string
          format: blkrange
          example: "013142464-013145212"
          description: "the block range (inclusive) covered by this chunk"
        rangeEnd:
          type: string
          format: datetime
          description: "the date of the last block in this range"
        nAddrs:
          type: number
          format: uint64
          description: "the number of addresses in the chunk"
        nApps:
          type: number
          format: uint64
          description: "the number of appearances in the chunk"
        nBlocks:
          type: number
          format: uint64
          description: "the number of blocks in the chunk"
        nBlooms:
          type: number
          format: uint64
          description: "the number of bloom filters in the chunk's bloom"
        recWid:
          type: number
          format: uint64
          description: "the record width of a single bloom filter"
        bloomSz:
          type: number
          format: uint64
          description: "the size of the bloom filters on disc in bytes"
        chunkSz:
          type: number
          format: uint64
          description: "the size of the chunks on disc in bytes"
        addrsPerBlock:
          type: number
          format: double
          description: "the average number of addresses per block"
        appsPerBlock:
          type: number
          format: double
          description: "the average number of appearances per block"
        appsPerAddr:
          type: number
          format: double
          description: "the average number of appearances per address"
        ratio:
          type: number
          format: double
          description: "the ratio of appearances to addresses"
    monitorClean:
      description: "report on cleaning dups out of monitors"
      type: object
      properties:
        address:
          type: string
          format: address
          description: "the address being cleaned"
        sizeThen:
          type: int64
          description: "the number of appearances in the monitor prior to cleaning"
        sizeNow:
          type: int64
          description: "the number of appearances in the monitor after cleaning"
        dups:
          type: int64
          description: "the number of duplicates removed"
    cacheItem:
      description: "a single entry in the results of a status query when `--verbose` is enabled"
      type: object
      properties:
        type:
          type: string
          description: "the type of the cache"
        items:
          type: array
          items:
            $ref: "#/components/schemas/cacheItem"
          description: "the individual items in the cache (if --verbose)"
        lastCached:
          type: string
          description: "the date of the most recent item added to the cache"
        nFiles:
          type: number
          format: uint64
          description: "the number of items in the cache"
        nFolders:
          type: number
          format: uint64
          description: "the number of folders holding that many items"
        path:
          type: string
          description: "the path to the top of the given cache"
        sizeInBytes:
          type: int64
          description: "the size of the cache in bytes"
    reportCheck:
      description: "report on checking contents of chunks"
      type: object
      properties:
        result:
          type: string
          description: "the result of the check"
        visitedCnt:
          type: number
          format: uint32
          description: "the number of visited items in the cache"
        checkedCnt:
          type: number
          format: uint32
          description: "the number of checks"
        skippedCnt:
          type: number
          format: uint32
          description: "the number of skipped checks"
        passedCnt:
          type: number
          format: uint32
          description: "the number of passed checks"
        failedCnt:
          type: number
          format: uint32
          description: "the number of failed checks"
        msgStrings:
          type: array
          items:
            type: string
          description: "an array of messages explaining failed checks"
        reason:
          type: string
          description: "the reason for the test"
    chunkPinReport:
      description: "a JSON object containing the results of pinning the Unchained Index"
      type: object
      properties:
        version:
          type: string
          description: "the version string hashed into the chunk data"
        chain:
          type: string
          description: "the chain to which this manifest belongs"
        schemas:
          type: string
          format: ipfshash
          description: "IPFS cid of file describing the schemas for the various databases"
        tsHash:
          type: string
          format: ipfshash
          description: "IPFS cid of file containing timestamps"
        manifestHash:
          type: string
          format: ipfshash
          description: "IPFS cid of file containing CIDs for the various chunks"
    chain:
      description: "a configuration item carrying information about a single chain"
      type: object
      properties:
        chain:
          type: string
          description: "The common name of the chain"
        chainId:
          type: number
          format: uint64
          description: "The chain id as reported by the RPC"
        symbol:
          type: string
          description: "The symbol of the base currency on the chain"
        rpcProvider:
          type: string
          description: "A valid RPC provider for the chain"
        remoteExplorer:
          type: string
          description: "A remote explorer for the chain such as Etherscan"
        localExplorer:
          type: string
          description: "The local explorer for the chain (typically TrueBlocks Explorer)"
        ipfsGateway:
          type: string
          description: "An IPFS gateway for pinning the index if enabled"
    function:
      description: "a human-readable representation of a Solidity function call or event"
      type: object
      properties:
        name:
          type: string
          description: "the name of the interface"
        type:
          type: string
          description: "the type of the interface, either 'event' or 'function'"
        signature:
          type: string
          description: "the canonical signature of the interface"
        encoding:
          type: string
          description: "the signature encoded with keccak"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "the input parameters to the function, if any"
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "the output parameters to the function, if any"
    parameter:
      description: "an input or output parameter to a Solidity function or event"
      type: object
      properties:
        type:
          type: string
          description: "the type of this parameter"
        name:
          type: string
          description: "the name of this parameter"
        strDefault:
          type: string
          description: "the default value of this parameter, if any"
        indexed:
          type: boolean
          description: "`true` if this parameter is indexed"
        internalType:
          type: string
          description: "for composite types, the internal type of the parameter"
        components:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
          description: "for composite types, the parameters making up the composite"
    slurp:
      description: "transaction data as returned from by Etherscan"
      type: object
      properties:
        hash:
          type: string
          format: hash
          example: "0xf128...1e98"
          description: "the hash of the transaction"
        blockHash:
          type: string
          format: hash
          example: "0xc421...fb04"
          description: "the hash of the block containing this transaction"
        blockNumber:
          type: number
          format: blknum
          example: 10021
          description: "the number of the block"
        transactionIndex:
          type: number
          format: blknum
          example: 305
          description: "the zero-indexed position of the transaction in the block"
        nonce:
          type: number
          format: uint64
          example: 232
          description: "sequence number of the transactions sent by the sender"
        timestamp:
          type: number
          format: timestamp
          example: 1438335038
          description: "the Unix timestamp of the object"
        date:
          type: string
          format: datetime
          description: "a calculated field -- the date of the object"
        from:
          type: string
          format: address
          description: "address from which the transaction was sent"
        to:
          type: string
          format: address
          description: "address to which the transaction was sent"
        value:
          type: string
          format: wei
          example: "0"
          description: "the amount of wei sent with this transactions"
        gas:
          type: string
          format: gas
          example: "158660"
          description: "the maximum number of gas allowed for this transaction"
        gasPrice:
          type: string
          format: gas
          example: "63525836552"
          description: "the number of wei per unit of gas the sender is willing to spend"
        input:
          type: string
          format: bytes
          example: "0x3d18b912"
          description: "byte data either containing a message or funcational data for a smart contracts. See the --articulate"
        hasToken:
          type: boolean
          description: "`true` if the transaction is token related, `false` otherwise"
        articulatedTx:
          type: object
          items:
            $ref: "#/components/schemas/function"
        compressedTx:
          type: string
          example: "0x3d18b912( )"
          description: "truncated, more readable version of the articulation"
        isError:
          type: boolean
          description: "`true` if the transaction ended in error, `false` otherwise"
    response:
      required:
        - result
      type: object
      properties:
        data:
          type: object
        error:
          type: array
          example:
            - error 1
            - error 2
          items:
            type: string
    hash:
      type: string
      format: hash
      description: "The 32-byte hash"
      example: "0xf128...1e98"
    address:
      type: string
    string:
      type: string
    topic:
      type: string
      format: bytes
      description: "One of four 32-byte topics of a log"
      example: "0xf128...1e98"

